### YamlMime:ManagedReference
items:
- uid: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer
  commentId: T:RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer
  id: DynamicReferenceDrawer
  parent: RocketshiftStudio.Editor.Shared
  children:
  - RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  - RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  langs:
  - csharp
  - vb
  name: DynamicReferenceDrawer
  nameWithType: DynamicReferenceDrawer
  fullName: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer
  type: Class
  source:
    remote:
      path: Assets/Rocketshift Studio/Shared/Scripts/Editor/Drawers/DynamicReferenceDrawer.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: DynamicReferenceDrawer
    path: ../Assets/Rocketshift Studio/Shared/Scripts/Editor/Drawers/DynamicReferenceDrawer.cs
    startLine: 11
  assemblies:
  - RocketshiftStudio.Editor.Shared
  namespace: RocketshiftStudio.Editor.Shared
  syntax:
    content: >-
      [CustomPropertyDrawer(typeof(DynamicReferenceAttribute))]

      public class DynamicReferenceDrawer : PropertyDrawer
    content.vb: >-
      <CustomPropertyDrawer(GetType(DynamicReferenceAttribute))>

      Public Class DynamicReferenceDrawer Inherits PropertyDrawer
  inheritance:
  - System.Object
  - UnityEditor.GUIDrawer
  - UnityEditor.PropertyDrawer
  inheritedMembers:
  - UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty)
  - UnityEditor.PropertyDrawer.CanCacheInspectorGUI(UnityEditor.SerializedProperty)
  - UnityEditor.PropertyDrawer.attribute
  - UnityEditor.PropertyDrawer.fieldInfo
  - UnityEditor.PropertyDrawer.preferredLabel
- uid: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  commentId: M:RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  id: GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  parent: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer
  langs:
  - csharp
  - vb
  name: GetPropertyHeight(SerializedProperty, GUIContent)
  nameWithType: DynamicReferenceDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
  fullName: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent)
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Shared/Scripts/Editor/Drawers/DynamicReferenceDrawer.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: GetPropertyHeight
    path: ../Assets/Rocketshift Studio/Shared/Scripts/Editor/Drawers/DynamicReferenceDrawer.cs
    startLine: 20
  assemblies:
  - RocketshiftStudio.Editor.Shared
  namespace: RocketshiftStudio.Editor.Shared
  summary: <p>Override this method to specify how tall the GUI for this field is in pixels.</p>
  example: []
  syntax:
    content: public override float GetPropertyHeight(SerializedProperty property, GUIContent label)
    parameters:
    - id: property
      type: UnityEditor.SerializedProperty
      description: The SerializedProperty to make the custom GUI for.
    - id: label
      type: UnityEngine.GUIContent
      description: The label of this property.
    return:
      type: System.Single
      description: <p>The height in pixels.</p>
    content.vb: Public Overrides Function GetPropertyHeight([property] As SerializedProperty, label As GUIContent) As Single
  overridden: UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  overload: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.GetPropertyHeight*
- uid: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  commentId: M:RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  id: OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  parent: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer
  langs:
  - csharp
  - vb
  name: OnGUI(Rect, SerializedProperty, GUIContent)
  nameWithType: DynamicReferenceDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
  fullName: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Shared/Scripts/Editor/Drawers/DynamicReferenceDrawer.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: OnGUI
    path: ../Assets/Rocketshift Studio/Shared/Scripts/Editor/Drawers/DynamicReferenceDrawer.cs
    startLine: 24
  assemblies:
  - RocketshiftStudio.Editor.Shared
  namespace: RocketshiftStudio.Editor.Shared
  summary: <p>Override this method to make your own IMGUI based GUI for the property.</p>
  example: []
  syntax:
    content: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
    parameters:
    - id: position
      type: UnityEngine.Rect
      description: Rectangle on the screen to use for the property GUI.
    - id: property
      type: UnityEditor.SerializedProperty
      description: The SerializedProperty to make the custom GUI for.
    - id: label
      type: UnityEngine.GUIContent
      description: The label of this property.
    content.vb: Public Overrides Sub OnGUI(position As Rect, [property] As SerializedProperty, label As GUIContent)
  overridden: UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  overload: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.OnGUI*
references:
- uid: RocketshiftStudio.Editor.Shared
  commentId: N:RocketshiftStudio.Editor.Shared
  href: RocketshiftStudio.html
  name: RocketshiftStudio.Editor.Shared
  nameWithType: RocketshiftStudio.Editor.Shared
  fullName: RocketshiftStudio.Editor.Shared
  spec.csharp:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Editor
    name: Editor
    href: RocketshiftStudio.Editor.html
  - name: .
  - uid: RocketshiftStudio.Editor.Shared
    name: Shared
    href: RocketshiftStudio.Editor.Shared.html
  spec.vb:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Editor
    name: Editor
    href: RocketshiftStudio.Editor.html
  - name: .
  - uid: RocketshiftStudio.Editor.Shared
    name: Shared
    href: RocketshiftStudio.Editor.Shared.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEditor.GUIDrawer
  commentId: T:UnityEditor.GUIDrawer
  parent: UnityEditor
  isExternal: true
  name: GUIDrawer
  nameWithType: GUIDrawer
  fullName: UnityEditor.GUIDrawer
- uid: UnityEditor.PropertyDrawer
  commentId: T:UnityEditor.PropertyDrawer
  parent: UnityEditor
  isExternal: true
  name: PropertyDrawer
  nameWithType: PropertyDrawer
  fullName: UnityEditor.PropertyDrawer
- uid: UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty)
  commentId: M:UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty)
  parent: UnityEditor.PropertyDrawer
  isExternal: true
  name: CreatePropertyGUI(SerializedProperty)
  nameWithType: PropertyDrawer.CreatePropertyGUI(SerializedProperty)
  fullName: UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty)
  spec.csharp:
  - uid: UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty)
    name: CreatePropertyGUI
    isExternal: true
  - name: (
  - uid: UnityEditor.SerializedProperty
    name: SerializedProperty
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty)
    name: CreatePropertyGUI
    isExternal: true
  - name: (
  - uid: UnityEditor.SerializedProperty
    name: SerializedProperty
    isExternal: true
  - name: )
- uid: UnityEditor.PropertyDrawer.CanCacheInspectorGUI(UnityEditor.SerializedProperty)
  commentId: M:UnityEditor.PropertyDrawer.CanCacheInspectorGUI(UnityEditor.SerializedProperty)
  parent: UnityEditor.PropertyDrawer
  isExternal: true
  name: CanCacheInspectorGUI(SerializedProperty)
  nameWithType: PropertyDrawer.CanCacheInspectorGUI(SerializedProperty)
  fullName: UnityEditor.PropertyDrawer.CanCacheInspectorGUI(UnityEditor.SerializedProperty)
  spec.csharp:
  - uid: UnityEditor.PropertyDrawer.CanCacheInspectorGUI(UnityEditor.SerializedProperty)
    name: CanCacheInspectorGUI
    isExternal: true
  - name: (
  - uid: UnityEditor.SerializedProperty
    name: SerializedProperty
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.PropertyDrawer.CanCacheInspectorGUI(UnityEditor.SerializedProperty)
    name: CanCacheInspectorGUI
    isExternal: true
  - name: (
  - uid: UnityEditor.SerializedProperty
    name: SerializedProperty
    isExternal: true
  - name: )
- uid: UnityEditor.PropertyDrawer.attribute
  commentId: P:UnityEditor.PropertyDrawer.attribute
  parent: UnityEditor.PropertyDrawer
  isExternal: true
  name: attribute
  nameWithType: PropertyDrawer.attribute
  fullName: UnityEditor.PropertyDrawer.attribute
- uid: UnityEditor.PropertyDrawer.fieldInfo
  commentId: P:UnityEditor.PropertyDrawer.fieldInfo
  parent: UnityEditor.PropertyDrawer
  isExternal: true
  name: fieldInfo
  nameWithType: PropertyDrawer.fieldInfo
  fullName: UnityEditor.PropertyDrawer.fieldInfo
- uid: UnityEditor.PropertyDrawer.preferredLabel
  commentId: P:UnityEditor.PropertyDrawer.preferredLabel
  parent: UnityEditor.PropertyDrawer
  isExternal: true
  name: preferredLabel
  nameWithType: PropertyDrawer.preferredLabel
  fullName: UnityEditor.PropertyDrawer.preferredLabel
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEditor
  commentId: N:UnityEditor
  isExternal: true
  name: UnityEditor
  nameWithType: UnityEditor
  fullName: UnityEditor
- uid: UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  commentId: M:UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  parent: UnityEditor.PropertyDrawer
  isExternal: true
  name: GetPropertyHeight(SerializedProperty, GUIContent)
  nameWithType: PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
  fullName: UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent)
  spec.csharp:
  - uid: UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)
    name: GetPropertyHeight
    isExternal: true
  - name: (
  - uid: UnityEditor.SerializedProperty
    name: SerializedProperty
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.GUIContent
    name: GUIContent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)
    name: GetPropertyHeight
    isExternal: true
  - name: (
  - uid: UnityEditor.SerializedProperty
    name: SerializedProperty
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.GUIContent
    name: GUIContent
    isExternal: true
  - name: )
- uid: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.GetPropertyHeight*
  commentId: Overload:RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.GetPropertyHeight
  href: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.html#RocketshiftStudio_Editor_Shared_DynamicReferenceDrawer_GetPropertyHeight_UnityEditor_SerializedProperty_UnityEngine_GUIContent_
  name: GetPropertyHeight
  nameWithType: DynamicReferenceDrawer.GetPropertyHeight
  fullName: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.GetPropertyHeight
- uid: UnityEditor.SerializedProperty
  commentId: T:UnityEditor.SerializedProperty
  parent: UnityEditor
  isExternal: true
  name: SerializedProperty
  nameWithType: SerializedProperty
  fullName: UnityEditor.SerializedProperty
- uid: UnityEngine.GUIContent
  commentId: T:UnityEngine.GUIContent
  parent: UnityEngine
  isExternal: true
  name: GUIContent
  nameWithType: GUIContent
  fullName: UnityEngine.GUIContent
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  commentId: M:UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)
  parent: UnityEditor.PropertyDrawer
  isExternal: true
  name: OnGUI(Rect, SerializedProperty, GUIContent)
  nameWithType: PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
  fullName: UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)
  spec.csharp:
  - uid: UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)
    name: OnGUI
    isExternal: true
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEditor.SerializedProperty
    name: SerializedProperty
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.GUIContent
    name: GUIContent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)
    name: OnGUI
    isExternal: true
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEditor.SerializedProperty
    name: SerializedProperty
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.GUIContent
    name: GUIContent
    isExternal: true
  - name: )
- uid: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.OnGUI*
  commentId: Overload:RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.OnGUI
  href: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.html#RocketshiftStudio_Editor_Shared_DynamicReferenceDrawer_OnGUI_UnityEngine_Rect_UnityEditor_SerializedProperty_UnityEngine_GUIContent_
  name: OnGUI
  nameWithType: DynamicReferenceDrawer.OnGUI
  fullName: RocketshiftStudio.Editor.Shared.DynamicReferenceDrawer.OnGUI
- uid: UnityEngine.Rect
  commentId: T:UnityEngine.Rect
  parent: UnityEngine
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
