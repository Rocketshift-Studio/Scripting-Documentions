### YamlMime:ManagedReference
items:
- uid: TinyGiantStudio.Text.Example.LoopAnimation
  commentId: T:TinyGiantStudio.Text.Example.LoopAnimation
  id: LoopAnimation
  parent: TinyGiantStudio.Text.Example
  children:
  - TinyGiantStudio.Text.Example.LoopAnimation.UpdateTargetList
  - TinyGiantStudio.Text.Example.LoopAnimation.targetLetterList
  - TinyGiantStudio.Text.Example.LoopAnimation.targetWordsList
  langs:
  - csharp
  - vb
  name: LoopAnimation
  nameWithType: LoopAnimation
  fullName: TinyGiantStudio.Text.Example.LoopAnimation
  type: Class
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Examples/LoopAnimation.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: LoopAnimation
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Examples/LoopAnimation.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text.Example
  syntax:
    content: >-
      [RequireComponent(typeof(Modular3DText))]

      [AddComponentMenu("Tiny Giant Studio/Modular 3D Text/Extra/Loop Animation", 20102)]

      public class LoopAnimation : MonoBehaviour
    content.vb: >-
      <RequireComponent(GetType(Modular3DText))>

      <AddComponentMenu("Tiny Giant Studio/Modular 3D Text/Extra/Loop Animation", 20102)>

      Public Class LoopAnimation Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  attributes:
  - type: UnityEngine.RequireComponent
    ctor: UnityEngine.RequireComponent.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TinyGiantStudio.Text.Modular3DText
  - type: UnityEngine.AddComponentMenu
    ctor: UnityEngine.AddComponentMenu.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: Tiny Giant Studio/Modular 3D Text/Extra/Loop Animation
    - type: System.Int32
      value: 20102
- uid: TinyGiantStudio.Text.Example.LoopAnimation.targetLetterList
  commentId: F:TinyGiantStudio.Text.Example.LoopAnimation.targetLetterList
  id: targetLetterList
  parent: TinyGiantStudio.Text.Example.LoopAnimation
  langs:
  - csharp
  - vb
  name: targetLetterList
  nameWithType: LoopAnimation.targetLetterList
  fullName: TinyGiantStudio.Text.Example.LoopAnimation.targetLetterList
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Examples/LoopAnimation.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: targetLetterList
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Examples/LoopAnimation.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text.Example
  syntax:
    content: public List<GameObject> targetLetterList
    return:
      type: System.Collections.Generic.List{UnityEngine.GameObject}
    content.vb: Public targetLetterList As List(Of GameObject)
- uid: TinyGiantStudio.Text.Example.LoopAnimation.targetWordsList
  commentId: F:TinyGiantStudio.Text.Example.LoopAnimation.targetWordsList
  id: targetWordsList
  parent: TinyGiantStudio.Text.Example.LoopAnimation
  langs:
  - csharp
  - vb
  name: targetWordsList
  nameWithType: LoopAnimation.targetWordsList
  fullName: TinyGiantStudio.Text.Example.LoopAnimation.targetWordsList
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Examples/LoopAnimation.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: targetWordsList
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Examples/LoopAnimation.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text.Example
  syntax:
    content: public List<List<GameObject>> targetWordsList
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.List{UnityEngine.GameObject}}
    content.vb: Public targetWordsList As List(Of List(Of GameObject))
- uid: TinyGiantStudio.Text.Example.LoopAnimation.UpdateTargetList
  commentId: M:TinyGiantStudio.Text.Example.LoopAnimation.UpdateTargetList
  id: UpdateTargetList
  parent: TinyGiantStudio.Text.Example.LoopAnimation
  langs:
  - csharp
  - vb
  name: UpdateTargetList()
  nameWithType: LoopAnimation.UpdateTargetList()
  fullName: TinyGiantStudio.Text.Example.LoopAnimation.UpdateTargetList()
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Examples/LoopAnimation.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: UpdateTargetList
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Examples/LoopAnimation.cs
    startLine: 40
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text.Example
  summary: This needs to be called everytime the text is changed
  example: []
  syntax:
    content: public void UpdateTargetList()
    content.vb: Public Sub UpdateTargetList()
  overload: TinyGiantStudio.Text.Example.LoopAnimation.UpdateTargetList*
references:
- uid: TinyGiantStudio.Text.Example
  commentId: N:TinyGiantStudio.Text.Example
  href: TinyGiantStudio.html
  name: TinyGiantStudio.Text.Example
  nameWithType: TinyGiantStudio.Text.Example
  fullName: TinyGiantStudio.Text.Example
  spec.csharp:
  - uid: TinyGiantStudio
    name: TinyGiantStudio
    href: TinyGiantStudio.html
  - name: .
  - uid: TinyGiantStudio.Text
    name: Text
    href: TinyGiantStudio.Text.html
  - name: .
  - uid: TinyGiantStudio.Text.Example
    name: Example
    href: TinyGiantStudio.Text.Example.html
  spec.vb:
  - uid: TinyGiantStudio
    name: TinyGiantStudio
    href: TinyGiantStudio.html
  - name: .
  - uid: TinyGiantStudio.Text
    name: Text
    href: TinyGiantStudio.Text.html
  - name: .
  - uid: TinyGiantStudio.Text.Example
    name: Example
    href: TinyGiantStudio.Text.Example.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Collections.Generic.List{UnityEngine.GameObject}
  commentId: T:System.Collections.Generic.List{UnityEngine.GameObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GameObject>
  nameWithType: List<GameObject>
  fullName: System.Collections.Generic.List<UnityEngine.GameObject>
  nameWithType.vb: List(Of GameObject)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.GameObject)
  name.vb: List(Of GameObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.Collections.Generic.List{System.Collections.Generic.List{UnityEngine.GameObject}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{UnityEngine.GameObject}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<List<GameObject>>
  nameWithType: List<List<GameObject>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.List<UnityEngine.GameObject>>
  nameWithType.vb: List(Of List(Of GameObject))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.List(Of UnityEngine.GameObject))
  name.vb: List(Of List(Of GameObject))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: )
  - name: )
- uid: TinyGiantStudio.Text.Example.LoopAnimation.UpdateTargetList*
  commentId: Overload:TinyGiantStudio.Text.Example.LoopAnimation.UpdateTargetList
  href: TinyGiantStudio.Text.Example.LoopAnimation.html#TinyGiantStudio_Text_Example_LoopAnimation_UpdateTargetList
  name: UpdateTargetList
  nameWithType: LoopAnimation.UpdateTargetList
  fullName: TinyGiantStudio.Text.Example.LoopAnimation.UpdateTargetList
