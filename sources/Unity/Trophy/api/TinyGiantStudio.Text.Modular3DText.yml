### YamlMime:ManagedReference
items:
- uid: TinyGiantStudio.Text.Modular3DText
  commentId: T:TinyGiantStudio.Text.Modular3DText
  id: Modular3DText
  parent: TinyGiantStudio.Text
  children:
  - TinyGiantStudio.Text.Modular3DText.AutoLetterSize
  - TinyGiantStudio.Text.Modular3DText.Capitalize
  - TinyGiantStudio.Text.Modular3DText.CleanUpdateText
  - TinyGiantStudio.Text.Modular3DText.DestroyMesh(UnityEngine.Mesh)
  - TinyGiantStudio.Text.Modular3DText.DoesStyleInheritFromAParent
  - TinyGiantStudio.Text.Modular3DText.EmptyEffect(System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer})
  - TinyGiantStudio.Text.Modular3DText.Font
  - TinyGiantStudio.Text.Modular3DText.FontSize
  - TinyGiantStudio.Text.Modular3DText.GetDeleteDurationFromEffects
  - TinyGiantStudio.Text.Modular3DText.LowerCase
  - TinyGiantStudio.Text.Modular3DText.Material
  - TinyGiantStudio.Text.Modular3DText.NewEffect(System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer},TinyGiantStudio.Modules.Module)
  - TinyGiantStudio.Text.Modular3DText.ShouldItCreateChild
  - TinyGiantStudio.Text.Modular3DText.Text
  - TinyGiantStudio.Text.Modular3DText.UpdateText
  - TinyGiantStudio.Text.Modular3DText.UpdateText(System.Int32)
  - TinyGiantStudio.Text.Modular3DText.UpdateText(System.Single)
  - TinyGiantStudio.Text.Modular3DText.UpdateText(System.String)
  - TinyGiantStudio.Text.Modular3DText.WordSpacing
  - TinyGiantStudio.Text.Modular3DText.addingModules
  - TinyGiantStudio.Text.Modular3DText.applyModuleOnNewCharacter
  - TinyGiantStudio.Text.Modular3DText.applyModulesOnEnable
  - TinyGiantStudio.Text.Modular3DText.applyModulesOnStart
  - TinyGiantStudio.Text.Modular3DText.assetPath
  - TinyGiantStudio.Text.Modular3DText.autoFontSize
  - TinyGiantStudio.Text.Modular3DText.autoSaveMesh
  - TinyGiantStudio.Text.Modular3DText.canBreakOutermostPrefab
  - TinyGiantStudio.Text.Modular3DText.characterObjectList
  - TinyGiantStudio.Text.Modular3DText.combineMeshDuringRuntime
  - TinyGiantStudio.Text.Modular3DText.combineMeshInEditor
  - TinyGiantStudio.Text.Modular3DText.customDeleteAfterDuration
  - TinyGiantStudio.Text.Modular3DText.debugLogs
  - TinyGiantStudio.Text.Modular3DText.deleteAfter
  - TinyGiantStudio.Text.Modular3DText.deletingModules
  - TinyGiantStudio.Text.Modular3DText.destroyChildObjectsWithGameObject
  - TinyGiantStudio.Text.Modular3DText.editorTimeLogging
  - TinyGiantStudio.Text.Modular3DText.fontSizeIterationAmount
  - TinyGiantStudio.Text.Modular3DText.generatedMeshes
  - TinyGiantStudio.Text.Modular3DText.hideLettersInHierarchyInEditMode
  - TinyGiantStudio.Text.Modular3DText.hideLettersInHierarchyInPlayMode
  - TinyGiantStudio.Text.Modular3DText.logDeletedCharacters
  - TinyGiantStudio.Text.Modular3DText.logFontUpdates
  - TinyGiantStudio.Text.Modular3DText.logMaterialUpdates
  - TinyGiantStudio.Text.Modular3DText.logSingleMeshStatus
  - TinyGiantStudio.Text.Modular3DText.logTextUpdates
  - TinyGiantStudio.Text.Modular3DText.maxFontSize
  - TinyGiantStudio.Text.Modular3DText.maxIterationTimes
  - TinyGiantStudio.Text.Modular3DText.meshPaths
  - TinyGiantStudio.Text.Modular3DText.meshPostProcess
  - TinyGiantStudio.Text.Modular3DText.minFontSize
  - TinyGiantStudio.Text.Modular3DText.oldText
  - TinyGiantStudio.Text.Modular3DText.reApplyModulesToOldCharacters
  - TinyGiantStudio.Text.Modular3DText.repositionOldCharacters
  - TinyGiantStudio.Text.Modular3DText.runTimeLogging
  - TinyGiantStudio.Text.Modular3DText.singleInPrefab
  - TinyGiantStudio.Text.Modular3DText.sizeGraceAmount
  - TinyGiantStudio.Text.Modular3DText.startAddingModuleFromChar
  - TinyGiantStudio.Text.Modular3DText.startDeletingModuleFromChar
  - TinyGiantStudio.Text.Modular3DText.updateTextOncePerFrame
  - TinyGiantStudio.Text.Modular3DText.useIncreasedVertexCountForCombinedMesh
  - TinyGiantStudio.Text.Modular3DText.useModules
  - TinyGiantStudio.Text.Modular3DText.wordArray
  langs:
  - csharp
  - vb
  name: Modular3DText
  nameWithType: Modular3DText
  fullName: TinyGiantStudio.Text.Modular3DText
  type: Class
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: Modular3DText
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: >-
      [SelectionBase]

      [DisallowMultipleComponent]

      [RequireComponent(typeof(TextUpdater))]

      [AddComponentMenu("Tiny Giant Studio/Modular 3D Text/3D Text", 200)]

      [HelpURL("https://ferdowsur.gitbook.io/modular-3d-text/text/modular-3d-text")]

      public class Modular3DText : MonoBehaviour
    content.vb: >-
      <SelectionBase>

      <DisallowMultipleComponent>

      <RequireComponent(GetType(TextUpdater))>

      <AddComponentMenu("Tiny Giant Studio/Modular 3D Text/3D Text", 200)>

      <HelpURL("https://ferdowsur.gitbook.io/modular-3d-text/text/modular-3d-text")>

      Public Class Modular3DText Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  attributes:
  - type: UnityEngine.SelectionBaseAttribute
    ctor: UnityEngine.SelectionBaseAttribute.#ctor
    arguments: []
  - type: UnityEngine.DisallowMultipleComponent
    ctor: UnityEngine.DisallowMultipleComponent.#ctor
    arguments: []
  - type: UnityEngine.RequireComponent
    ctor: UnityEngine.RequireComponent.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TinyGiantStudio.Text.TextUpdater
  - type: UnityEngine.AddComponentMenu
    ctor: UnityEngine.AddComponentMenu.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: Tiny Giant Studio/Modular 3D Text/3D Text
    - type: System.Int32
      value: 200
  - type: UnityEngine.HelpURLAttribute
    ctor: UnityEngine.HelpURLAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: https://ferdowsur.gitbook.io/modular-3d-text/text/modular-3d-text
- uid: TinyGiantStudio.Text.Modular3DText.Text
  commentId: P:TinyGiantStudio.Text.Modular3DText.Text
  id: Text
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: Modular3DText.Text
  fullName: TinyGiantStudio.Text.Modular3DText.Text
  type: Property
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: Text
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: >-
    Text or any property changes trigger an automatic update of the mesh at the end of the frame. This avoids wasting resources on needless calculations when multiple properties change in the same frame.

    This behavior can be modified in the Advanced setting.
  example: []
  syntax:
    content: public string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Text As String
  overload: TinyGiantStudio.Text.Modular3DText.Text*
- uid: TinyGiantStudio.Text.Modular3DText.oldText
  commentId: F:TinyGiantStudio.Text.Modular3DText.oldText
  id: oldText
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: oldText
  nameWithType: Modular3DText.oldText
  fullName: TinyGiantStudio.Text.Modular3DText.oldText
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: oldText
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 60
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: This is used to check which letters need to be recreated/replaced by comparing to new text.
  example: []
  syntax:
    content: public string oldText
    return:
      type: System.String
    content.vb: Public oldText As String
- uid: TinyGiantStudio.Text.Modular3DText.wordArray
  commentId: F:TinyGiantStudio.Text.Modular3DText.wordArray
  id: wordArray
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: wordArray
  nameWithType: Modular3DText.wordArray
  fullName: TinyGiantStudio.Text.Modular3DText.wordArray
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: wordArray
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 67
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: List of words in the text
  example: []
  syntax:
    content: public string[] wordArray
    return:
      type: System.String[]
    content.vb: Public wordArray As String()
- uid: TinyGiantStudio.Text.Modular3DText.characterObjectList
  commentId: F:TinyGiantStudio.Text.Modular3DText.characterObjectList
  id: characterObjectList
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: characterObjectList
  nameWithType: Modular3DText.characterObjectList
  fullName: TinyGiantStudio.Text.Modular3DText.characterObjectList
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: characterObjectList
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 72
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: Contains a list of all the character gameObject created by Text
  example: []
  syntax:
    content: public List<GameObject> characterObjectList
    return:
      type: System.Collections.Generic.List{UnityEngine.GameObject}
    content.vb: Public characterObjectList As List(Of GameObject)
- uid: TinyGiantStudio.Text.Modular3DText.generatedMeshes
  commentId: F:TinyGiantStudio.Text.Modular3DText.generatedMeshes
  id: generatedMeshes
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: generatedMeshes
  nameWithType: Modular3DText.generatedMeshes
  fullName: TinyGiantStudio.Text.Modular3DText.generatedMeshes
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: generatedMeshes
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 86
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public List<Mesh> generatedMeshes
    return:
      type: System.Collections.Generic.List{UnityEngine.Mesh}
    content.vb: Public generatedMeshes As List(Of Mesh)
- uid: TinyGiantStudio.Text.Modular3DText.autoSaveMesh
  commentId: F:TinyGiantStudio.Text.Modular3DText.autoSaveMesh
  id: autoSaveMesh
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: autoSaveMesh
  nameWithType: Modular3DText.autoSaveMesh
  fullName: TinyGiantStudio.Text.Modular3DText.autoSaveMesh
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: autoSaveMesh
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 89
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool autoSaveMesh
    return:
      type: System.Boolean
    content.vb: Public autoSaveMesh As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.Font
  commentId: P:TinyGiantStudio.Text.Modular3DText.Font
  id: Font
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: Font
  nameWithType: Modular3DText.Font
  fullName: TinyGiantStudio.Text.Modular3DText.Font
  type: Property
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: Font
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 94
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public Font Font { get; set; }
    parameters: []
    return:
      type: TinyGiantStudio.Text.Font
    content.vb: Public Property Font As Font
  overload: TinyGiantStudio.Text.Modular3DText.Font*
- uid: TinyGiantStudio.Text.Modular3DText.Material
  commentId: P:TinyGiantStudio.Text.Modular3DText.Material
  id: Material
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: Material
  nameWithType: Modular3DText.Material
  fullName: TinyGiantStudio.Text.Modular3DText.Material
  type: Property
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: Material
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 112
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public Material Material { get; set; }
    parameters: []
    return:
      type: UnityEngine.Material
    content.vb: Public Property Material As Material
  overload: TinyGiantStudio.Text.Modular3DText.Material*
- uid: TinyGiantStudio.Text.Modular3DText.FontSize
  commentId: P:TinyGiantStudio.Text.Modular3DText.FontSize
  id: FontSize
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: FontSize
  nameWithType: Modular3DText.FontSize
  fullName: TinyGiantStudio.Text.Modular3DText.FontSize
  type: Property
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: FontSize
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 133
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: Assigning a new font size recreates the entire text. This is to avoid interfering with anything any module or usercreated code is doing.
  example: []
  syntax:
    content: public Vector3 FontSize { get; set; }
    parameters: []
    return:
      type: UnityEngine.Vector3
    content.vb: Public Property FontSize As Vector3
  overload: TinyGiantStudio.Text.Modular3DText.FontSize*
- uid: TinyGiantStudio.Text.Modular3DText.Capitalize
  commentId: P:TinyGiantStudio.Text.Modular3DText.Capitalize
  id: Capitalize
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: Capitalize
  nameWithType: Modular3DText.Capitalize
  fullName: TinyGiantStudio.Text.Modular3DText.Capitalize
  type: Property
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: Capitalize
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 152
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: If both Capitalize and LowerCase are true, Capitalize is applied
  example: []
  syntax:
    content: public bool Capitalize { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Capitalize As Boolean
  overload: TinyGiantStudio.Text.Modular3DText.Capitalize*
- uid: TinyGiantStudio.Text.Modular3DText.LowerCase
  commentId: P:TinyGiantStudio.Text.Modular3DText.LowerCase
  id: LowerCase
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: LowerCase
  nameWithType: Modular3DText.LowerCase
  fullName: TinyGiantStudio.Text.Modular3DText.LowerCase
  type: Property
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: LowerCase
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 169
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: If both Capitalize and LowerCase are true, Capitalize is applied
  example: []
  syntax:
    content: public bool LowerCase { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LowerCase As Boolean
  overload: TinyGiantStudio.Text.Modular3DText.LowerCase*
- uid: TinyGiantStudio.Text.Modular3DText.AutoLetterSize
  commentId: P:TinyGiantStudio.Text.Modular3DText.AutoLetterSize
  id: AutoLetterSize
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: AutoLetterSize
  nameWithType: Modular3DText.AutoLetterSize
  fullName: TinyGiantStudio.Text.Modular3DText.AutoLetterSize
  type: Property
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: AutoLetterSize
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 188
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: >-
    If turned on, instead of using the predetermined size of each letter, their size is taken from the size they take in the render view.

    Please remember, this is letter size, this doesn't modify the font size.
  example: []
  syntax:
    content: public bool AutoLetterSize { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AutoLetterSize As Boolean
  overload: TinyGiantStudio.Text.Modular3DText.AutoLetterSize*
- uid: TinyGiantStudio.Text.Modular3DText.WordSpacing
  commentId: P:TinyGiantStudio.Text.Modular3DText.WordSpacing
  id: WordSpacing
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: WordSpacing
  nameWithType: Modular3DText.WordSpacing
  fullName: TinyGiantStudio.Text.Modular3DText.WordSpacing
  type: Property
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: WordSpacing
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 204
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public float WordSpacing { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property WordSpacing As Single
  overload: TinyGiantStudio.Text.Modular3DText.WordSpacing*
- uid: TinyGiantStudio.Text.Modular3DText.useModules
  commentId: F:TinyGiantStudio.Text.Modular3DText.useModules
  id: useModules
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: useModules
  nameWithType: Modular3DText.useModules
  fullName: TinyGiantStudio.Text.Modular3DText.useModules
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: useModules
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 219
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool useModules
    return:
      type: System.Boolean
    content.vb: Public useModules As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.startAddingModuleFromChar
  commentId: F:TinyGiantStudio.Text.Modular3DText.startAddingModuleFromChar
  id: startAddingModuleFromChar
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: startAddingModuleFromChar
  nameWithType: Modular3DText.startAddingModuleFromChar
  fullName: TinyGiantStudio.Text.Modular3DText.startAddingModuleFromChar
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: startAddingModuleFromChar
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 224
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: If true, the adding module uses MonoBehavior attached to the character created to run its coroutine. This way, if the text is deactivated, the module isn't interrupted.
  example: []
  syntax:
    content: public bool startAddingModuleFromChar
    return:
      type: System.Boolean
    content.vb: Public startAddingModuleFromChar As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.addingModules
  commentId: F:TinyGiantStudio.Text.Modular3DText.addingModules
  id: addingModules
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: addingModules
  nameWithType: Modular3DText.addingModules
  fullName: TinyGiantStudio.Text.Modular3DText.addingModules
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: addingModules
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 226
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public List<ModuleContainer> addingModules
    return:
      type: System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer}
    content.vb: Public addingModules As List(Of ModuleContainer)
- uid: TinyGiantStudio.Text.Modular3DText.startDeletingModuleFromChar
  commentId: F:TinyGiantStudio.Text.Modular3DText.startDeletingModuleFromChar
  id: startDeletingModuleFromChar
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: startDeletingModuleFromChar
  nameWithType: Modular3DText.startDeletingModuleFromChar
  fullName: TinyGiantStudio.Text.Modular3DText.startDeletingModuleFromChar
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: startDeletingModuleFromChar
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 231
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: If true, the deleting module uses MonoBehavior attached to the char to run the coroutine. This way, if the text is deactivated, the module isn't interrupted.
  example: []
  syntax:
    content: public bool startDeletingModuleFromChar
    return:
      type: System.Boolean
    content.vb: Public startDeletingModuleFromChar As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.deletingModules
  commentId: F:TinyGiantStudio.Text.Modular3DText.deletingModules
  id: deletingModules
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: deletingModules
  nameWithType: Modular3DText.deletingModules
  fullName: TinyGiantStudio.Text.Modular3DText.deletingModules
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: deletingModules
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 233
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public List<ModuleContainer> deletingModules
    return:
      type: System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer}
    content.vb: Public deletingModules As List(Of ModuleContainer)
- uid: TinyGiantStudio.Text.Modular3DText.customDeleteAfterDuration
  commentId: F:TinyGiantStudio.Text.Modular3DText.customDeleteAfterDuration
  id: customDeleteAfterDuration
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: customDeleteAfterDuration
  nameWithType: Modular3DText.customDeleteAfterDuration
  fullName: TinyGiantStudio.Text.Modular3DText.customDeleteAfterDuration
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: customDeleteAfterDuration
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 238
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: If set to true, deleteAfter float is used to determine when to delete a character.
  example: []
  syntax:
    content: public bool customDeleteAfterDuration
    return:
      type: System.Boolean
    content.vb: Public customDeleteAfterDuration As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.deleteAfter
  commentId: F:TinyGiantStudio.Text.Modular3DText.deleteAfter
  id: deleteAfter
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: deleteAfter
  nameWithType: Modular3DText.deleteAfter
  fullName: TinyGiantStudio.Text.Modular3DText.deleteAfter
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: deleteAfter
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 240
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public float deleteAfter
    return:
      type: System.Single
    content.vb: Public deleteAfter As Single
- uid: TinyGiantStudio.Text.Modular3DText.applyModuleOnNewCharacter
  commentId: F:TinyGiantStudio.Text.Modular3DText.applyModuleOnNewCharacter
  id: applyModuleOnNewCharacter
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: applyModuleOnNewCharacter
  nameWithType: Modular3DText.applyModuleOnNewCharacter
  fullName: TinyGiantStudio.Text.Modular3DText.applyModuleOnNewCharacter
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: applyModuleOnNewCharacter
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 242
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool applyModuleOnNewCharacter
    return:
      type: System.Boolean
    content.vb: Public applyModuleOnNewCharacter As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.applyModulesOnStart
  commentId: F:TinyGiantStudio.Text.Modular3DText.applyModulesOnStart
  id: applyModulesOnStart
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: applyModulesOnStart
  nameWithType: Modular3DText.applyModulesOnStart
  fullName: TinyGiantStudio.Text.Modular3DText.applyModulesOnStart
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: applyModulesOnStart
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 245
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: >-
      [Tooltip("If turned on, adding modules will be automatically called when a prefab with existing text is instantiated on Start() instead of only when a new character is added.")]

      public bool applyModulesOnStart
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("If turned on, adding modules will be automatically called when a prefab with existing text is instantiated on Start() instead of only when a new character is added.")>

      Public applyModulesOnStart As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: If turned on, adding modules will be automatically called when a prefab with existing text is instantiated on Start() instead of only when a new character is added.
- uid: TinyGiantStudio.Text.Modular3DText.applyModulesOnEnable
  commentId: F:TinyGiantStudio.Text.Modular3DText.applyModulesOnEnable
  id: applyModulesOnEnable
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: applyModulesOnEnable
  nameWithType: Modular3DText.applyModulesOnEnable
  fullName: TinyGiantStudio.Text.Modular3DText.applyModulesOnEnable
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: applyModulesOnEnable
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 248
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: >-
      [Tooltip("If turned on, adding modules will be automatically called when a prefab with existing text is enabled instead of only when a new character is added")]

      public bool applyModulesOnEnable
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("If turned on, adding modules will be automatically called when a prefab with existing text is enabled instead of only when a new character is added")>

      Public applyModulesOnEnable As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: If turned on, adding modules will be automatically called when a prefab with existing text is enabled instead of only when a new character is added
- uid: TinyGiantStudio.Text.Modular3DText.destroyChildObjectsWithGameObject
  commentId: F:TinyGiantStudio.Text.Modular3DText.destroyChildObjectsWithGameObject
  id: destroyChildObjectsWithGameObject
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: destroyChildObjectsWithGameObject
  nameWithType: Modular3DText.destroyChildObjectsWithGameObject
  fullName: TinyGiantStudio.Text.Modular3DText.destroyChildObjectsWithGameObject
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: destroyChildObjectsWithGameObject
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 254
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: >-
      [Tooltip("When text is updated, old characters are moved to their correct position if their position is moved by something like a module.")]

      public bool destroyChildObjectsWithGameObject
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("When text is updated, old characters are moved to their correct position if their position is moved by something like a module.")>

      Public destroyChildObjectsWithGameObject As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: When text is updated, old characters are moved to their correct position if their position is moved by something like a module.
- uid: TinyGiantStudio.Text.Modular3DText.repositionOldCharacters
  commentId: F:TinyGiantStudio.Text.Modular3DText.repositionOldCharacters
  id: repositionOldCharacters
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: repositionOldCharacters
  nameWithType: Modular3DText.repositionOldCharacters
  fullName: TinyGiantStudio.Text.Modular3DText.repositionOldCharacters
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: repositionOldCharacters
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 256
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool repositionOldCharacters
    return:
      type: System.Boolean
    content.vb: Public repositionOldCharacters As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.reApplyModulesToOldCharacters
  commentId: F:TinyGiantStudio.Text.Modular3DText.reApplyModulesToOldCharacters
  id: reApplyModulesToOldCharacters
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: reApplyModulesToOldCharacters
  nameWithType: Modular3DText.reApplyModulesToOldCharacters
  fullName: TinyGiantStudio.Text.Modular3DText.reApplyModulesToOldCharacters
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: reApplyModulesToOldCharacters
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 257
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool reApplyModulesToOldCharacters
    return:
      type: System.Boolean
    content.vb: Public reApplyModulesToOldCharacters As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.singleInPrefab
  commentId: F:TinyGiantStudio.Text.Modular3DText.singleInPrefab
  id: singleInPrefab
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: singleInPrefab
  nameWithType: Modular3DText.singleInPrefab
  fullName: TinyGiantStudio.Text.Modular3DText.singleInPrefab
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: singleInPrefab
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 260
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool singleInPrefab
    return:
      type: System.Boolean
    content.vb: Public singleInPrefab As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.combineMeshInEditor
  commentId: F:TinyGiantStudio.Text.Modular3DText.combineMeshInEditor
  id: combineMeshInEditor
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: combineMeshInEditor
  nameWithType: Modular3DText.combineMeshInEditor
  fullName: TinyGiantStudio.Text.Modular3DText.combineMeshInEditor
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: combineMeshInEditor
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 261
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool combineMeshInEditor
    return:
      type: System.Boolean
    content.vb: Public combineMeshInEditor As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.combineMeshDuringRuntime
  commentId: F:TinyGiantStudio.Text.Modular3DText.combineMeshDuringRuntime
  id: combineMeshDuringRuntime
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: combineMeshDuringRuntime
  nameWithType: Modular3DText.combineMeshDuringRuntime
  fullName: TinyGiantStudio.Text.Modular3DText.combineMeshDuringRuntime
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: combineMeshDuringRuntime
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 262
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool combineMeshDuringRuntime
    return:
      type: System.Boolean
    content.vb: Public combineMeshDuringRuntime As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.hideLettersInHierarchyInPlayMode
  commentId: F:TinyGiantStudio.Text.Modular3DText.hideLettersInHierarchyInPlayMode
  id: hideLettersInHierarchyInPlayMode
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: hideLettersInHierarchyInPlayMode
  nameWithType: Modular3DText.hideLettersInHierarchyInPlayMode
  fullName: TinyGiantStudio.Text.Modular3DText.hideLettersInHierarchyInPlayMode
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: hideLettersInHierarchyInPlayMode
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 265
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: >-
      [Tooltip("Don't let letters show up in hierarchy in play mode. They are still there but not visible.")]

      public bool hideLettersInHierarchyInPlayMode
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("Don't let letters show up in hierarchy in play mode. They are still there but not visible.")>

      Public hideLettersInHierarchyInPlayMode As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Don't let letters show up in hierarchy in play mode. They are still there but not visible.
- uid: TinyGiantStudio.Text.Modular3DText.hideLettersInHierarchyInEditMode
  commentId: F:TinyGiantStudio.Text.Modular3DText.hideLettersInHierarchyInEditMode
  id: hideLettersInHierarchyInEditMode
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: hideLettersInHierarchyInEditMode
  nameWithType: Modular3DText.hideLettersInHierarchyInEditMode
  fullName: TinyGiantStudio.Text.Modular3DText.hideLettersInHierarchyInEditMode
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: hideLettersInHierarchyInEditMode
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 268
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: >-
      [Tooltip("If combine mesh is turned off")]

      public bool hideLettersInHierarchyInEditMode
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("If combine mesh is turned off")>

      Public hideLettersInHierarchyInEditMode As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: If combine mesh is turned off
- uid: TinyGiantStudio.Text.Modular3DText.canBreakOutermostPrefab
  commentId: F:TinyGiantStudio.Text.Modular3DText.canBreakOutermostPrefab
  id: canBreakOutermostPrefab
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: canBreakOutermostPrefab
  nameWithType: Modular3DText.canBreakOutermostPrefab
  fullName: TinyGiantStudio.Text.Modular3DText.canBreakOutermostPrefab
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: canBreakOutermostPrefab
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 271
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: >-
      [Tooltip("Breaks prefab connection while saving prefab location, can replace prefab at that location with a click")]

      public bool canBreakOutermostPrefab
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("Breaks prefab connection while saving prefab location, can replace prefab at that location with a click")>

      Public canBreakOutermostPrefab As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Breaks prefab connection while saving prefab location, can replace prefab at that location with a click
- uid: TinyGiantStudio.Text.Modular3DText.assetPath
  commentId: F:TinyGiantStudio.Text.Modular3DText.assetPath
  id: assetPath
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: assetPath
  nameWithType: Modular3DText.assetPath
  fullName: TinyGiantStudio.Text.Modular3DText.assetPath
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: assetPath
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 279
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: >-
    Where the prefab is saved.

    <br>This is only for some edge cases that can be enabled via advanced settings.</br>
  example: []
  syntax:
    content: public string assetPath
    return:
      type: System.String
    content.vb: Public assetPath As String
- uid: TinyGiantStudio.Text.Modular3DText.meshPaths
  commentId: F:TinyGiantStudio.Text.Modular3DText.meshPaths
  id: meshPaths
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: meshPaths
  nameWithType: Modular3DText.meshPaths
  fullName: TinyGiantStudio.Text.Modular3DText.meshPaths
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: meshPaths
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 284
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: Where the mesh is saved if mesh save is turned on
  example: []
  syntax:
    content: public List<string> meshPaths
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public meshPaths As List(Of String)
- uid: TinyGiantStudio.Text.Modular3DText.updateTextOncePerFrame
  commentId: F:TinyGiantStudio.Text.Modular3DText.updateTextOncePerFrame
  id: updateTextOncePerFrame
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: updateTextOncePerFrame
  nameWithType: Modular3DText.updateTextOncePerFrame
  fullName: TinyGiantStudio.Text.Modular3DText.updateTextOncePerFrame
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: updateTextOncePerFrame
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 287
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool updateTextOncePerFrame
    return:
      type: System.Boolean
    content.vb: Public updateTextOncePerFrame As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.meshPostProcess
  commentId: F:TinyGiantStudio.Text.Modular3DText.meshPostProcess
  id: meshPostProcess
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: meshPostProcess
  nameWithType: Modular3DText.meshPostProcess
  fullName: TinyGiantStudio.Text.Modular3DText.meshPostProcess
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: meshPostProcess
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 298
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: >-
    Named UV Remapping in the inspector for now, since that's the only thing it dictates for now.

    Dictates if additional post-processing is done on the mesh.

    Project UV is default which means no additional calculation is done.

    Wrap UV tries to wrap the texture around the mesh.

    Additional post-processing types might be added in the future.
  example: []
  syntax:
    content: public MeshPostProcess meshPostProcess
    return:
      type: TinyGiantStudio.Text.MeshPostProcess
    content.vb: Public meshPostProcess As MeshPostProcess
- uid: TinyGiantStudio.Text.Modular3DText.useIncreasedVertexCountForCombinedMesh
  commentId: F:TinyGiantStudio.Text.Modular3DText.useIncreasedVertexCountForCombinedMesh
  id: useIncreasedVertexCountForCombinedMesh
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: useIncreasedVertexCountForCombinedMesh
  nameWithType: Modular3DText.useIncreasedVertexCountForCombinedMesh
  fullName: TinyGiantStudio.Text.Modular3DText.useIncreasedVertexCountForCombinedMesh
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: useIncreasedVertexCountForCombinedMesh
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 305
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: >-
    Changes mesh index format from 16 to 32 when set to true.

    index format 16-bit takes less memory and bandwidth.

    Even if it is on,  it doesn't change the index format if it is not needed.
  example: []
  syntax:
    content: public bool useIncreasedVertexCountForCombinedMesh
    return:
      type: System.Boolean
    content.vb: Public useIncreasedVertexCountForCombinedMesh As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.debugLogs
  commentId: F:TinyGiantStudio.Text.Modular3DText.debugLogs
  id: debugLogs
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: debugLogs
  nameWithType: Modular3DText.debugLogs
  fullName: TinyGiantStudio.Text.Modular3DText.debugLogs
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: debugLogs
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 341
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool debugLogs
    return:
      type: System.Boolean
    content.vb: Public debugLogs As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.runTimeLogging
  commentId: F:TinyGiantStudio.Text.Modular3DText.runTimeLogging
  id: runTimeLogging
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: runTimeLogging
  nameWithType: Modular3DText.runTimeLogging
  fullName: TinyGiantStudio.Text.Modular3DText.runTimeLogging
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: runTimeLogging
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 342
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool runTimeLogging
    return:
      type: System.Boolean
    content.vb: Public runTimeLogging As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.editorTimeLogging
  commentId: F:TinyGiantStudio.Text.Modular3DText.editorTimeLogging
  id: editorTimeLogging
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: editorTimeLogging
  nameWithType: Modular3DText.editorTimeLogging
  fullName: TinyGiantStudio.Text.Modular3DText.editorTimeLogging
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: editorTimeLogging
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 343
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool editorTimeLogging
    return:
      type: System.Boolean
    content.vb: Public editorTimeLogging As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.logTextUpdates
  commentId: F:TinyGiantStudio.Text.Modular3DText.logTextUpdates
  id: logTextUpdates
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: logTextUpdates
  nameWithType: Modular3DText.logTextUpdates
  fullName: TinyGiantStudio.Text.Modular3DText.logTextUpdates
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: logTextUpdates
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 345
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool logTextUpdates
    return:
      type: System.Boolean
    content.vb: Public logTextUpdates As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.logFontUpdates
  commentId: F:TinyGiantStudio.Text.Modular3DText.logFontUpdates
  id: logFontUpdates
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: logFontUpdates
  nameWithType: Modular3DText.logFontUpdates
  fullName: TinyGiantStudio.Text.Modular3DText.logFontUpdates
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: logFontUpdates
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 346
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool logFontUpdates
    return:
      type: System.Boolean
    content.vb: Public logFontUpdates As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.logMaterialUpdates
  commentId: F:TinyGiantStudio.Text.Modular3DText.logMaterialUpdates
  id: logMaterialUpdates
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: logMaterialUpdates
  nameWithType: Modular3DText.logMaterialUpdates
  fullName: TinyGiantStudio.Text.Modular3DText.logMaterialUpdates
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: logMaterialUpdates
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 347
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool logMaterialUpdates
    return:
      type: System.Boolean
    content.vb: Public logMaterialUpdates As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.logDeletedCharacters
  commentId: F:TinyGiantStudio.Text.Modular3DText.logDeletedCharacters
  id: logDeletedCharacters
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: logDeletedCharacters
  nameWithType: Modular3DText.logDeletedCharacters
  fullName: TinyGiantStudio.Text.Modular3DText.logDeletedCharacters
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: logDeletedCharacters
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 348
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool logDeletedCharacters
    return:
      type: System.Boolean
    content.vb: Public logDeletedCharacters As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.logSingleMeshStatus
  commentId: F:TinyGiantStudio.Text.Modular3DText.logSingleMeshStatus
  id: logSingleMeshStatus
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: logSingleMeshStatus
  nameWithType: Modular3DText.logSingleMeshStatus
  fullName: TinyGiantStudio.Text.Modular3DText.logSingleMeshStatus
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: logSingleMeshStatus
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 349
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool logSingleMeshStatus
    return:
      type: System.Boolean
    content.vb: Public logSingleMeshStatus As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.CleanUpdateText
  commentId: M:TinyGiantStudio.Text.Modular3DText.CleanUpdateText
  id: CleanUpdateText
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: CleanUpdateText()
  nameWithType: Modular3DText.CleanUpdateText()
  fullName: TinyGiantStudio.Text.Modular3DText.CleanUpdateText()
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: CleanUpdateText
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 507
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: >-
    This will completely remove the old letters and create the complete text.

    <br />

    <br>Other methods of updating text will try to only update the ones that need to be updated</br>

    <br>Example: Adding the 'e' at the end of the existing text "nam" will try to add only 'e' without touching the other text unnecessarily.</br>
  example: []
  syntax:
    content: >-
      [ContextMenu("CleanUpdateText")]

      public void CleanUpdateText()
    content.vb: >-
      <ContextMenu("CleanUpdateText")>

      Public Sub CleanUpdateText()
  overload: TinyGiantStudio.Text.Modular3DText.CleanUpdateText*
  attributes:
  - type: UnityEngine.ContextMenu
    ctor: UnityEngine.ContextMenu.#ctor(System.String)
    arguments:
    - type: System.String
      value: CleanUpdateText
- uid: TinyGiantStudio.Text.Modular3DText.UpdateText(System.String)
  commentId: M:TinyGiantStudio.Text.Modular3DText.UpdateText(System.String)
  id: UpdateText(System.String)
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: UpdateText(string)
  nameWithType: Modular3DText.UpdateText(string)
  fullName: TinyGiantStudio.Text.Modular3DText.UpdateText(string)
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: UpdateText
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 514
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public void UpdateText(string newText)
    parameters:
    - id: newText
      type: System.String
    content.vb: Public Sub UpdateText(newText As String)
  overload: TinyGiantStudio.Text.Modular3DText.UpdateText*
  nameWithType.vb: Modular3DText.UpdateText(String)
  fullName.vb: TinyGiantStudio.Text.Modular3DText.UpdateText(String)
  name.vb: UpdateText(String)
- uid: TinyGiantStudio.Text.Modular3DText.UpdateText(System.Single)
  commentId: M:TinyGiantStudio.Text.Modular3DText.UpdateText(System.Single)
  id: UpdateText(System.Single)
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: UpdateText(float)
  nameWithType: Modular3DText.UpdateText(float)
  fullName: TinyGiantStudio.Text.Modular3DText.UpdateText(float)
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: UpdateText
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 523
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: Updates the text instantly with the number as text.
  example: []
  syntax:
    content: public void UpdateText(float number)
    parameters:
    - id: number
      type: System.Single
      description: The Text
    content.vb: Public Sub UpdateText(number As Single)
  overload: TinyGiantStudio.Text.Modular3DText.UpdateText*
  nameWithType.vb: Modular3DText.UpdateText(Single)
  fullName.vb: TinyGiantStudio.Text.Modular3DText.UpdateText(Single)
  name.vb: UpdateText(Single)
- uid: TinyGiantStudio.Text.Modular3DText.UpdateText(System.Int32)
  commentId: M:TinyGiantStudio.Text.Modular3DText.UpdateText(System.Int32)
  id: UpdateText(System.Int32)
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: UpdateText(int)
  nameWithType: Modular3DText.UpdateText(int)
  fullName: TinyGiantStudio.Text.Modular3DText.UpdateText(int)
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: UpdateText
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 532
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: Updates the text instantly with the number as text.
  example: []
  syntax:
    content: public void UpdateText(int number)
    parameters:
    - id: number
      type: System.Int32
      description: The Text
    content.vb: Public Sub UpdateText(number As Integer)
  overload: TinyGiantStudio.Text.Modular3DText.UpdateText*
  nameWithType.vb: Modular3DText.UpdateText(Integer)
  fullName.vb: TinyGiantStudio.Text.Modular3DText.UpdateText(Integer)
  name.vb: UpdateText(Integer)
- uid: TinyGiantStudio.Text.Modular3DText.UpdateText
  commentId: M:TinyGiantStudio.Text.Modular3DText.UpdateText
  id: UpdateText
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: UpdateText()
  nameWithType: Modular3DText.UpdateText()
  fullName: TinyGiantStudio.Text.Modular3DText.UpdateText()
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: UpdateText
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 537
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public void UpdateText()
    content.vb: Public Sub UpdateText()
  overload: TinyGiantStudio.Text.Modular3DText.UpdateText*
- uid: TinyGiantStudio.Text.Modular3DText.autoFontSize
  commentId: F:TinyGiantStudio.Text.Modular3DText.autoFontSize
  id: autoFontSize
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: autoFontSize
  nameWithType: Modular3DText.autoFontSize
  fullName: TinyGiantStudio.Text.Modular3DText.autoFontSize
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: autoFontSize
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 804
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public bool autoFontSize
    return:
      type: System.Boolean
    content.vb: Public autoFontSize As Boolean
- uid: TinyGiantStudio.Text.Modular3DText.minFontSize
  commentId: F:TinyGiantStudio.Text.Modular3DText.minFontSize
  id: minFontSize
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: minFontSize
  nameWithType: Modular3DText.minFontSize
  fullName: TinyGiantStudio.Text.Modular3DText.minFontSize
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: minFontSize
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 805
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public Vector3 minFontSize
    return:
      type: UnityEngine.Vector3
    content.vb: Public minFontSize As Vector3
- uid: TinyGiantStudio.Text.Modular3DText.maxFontSize
  commentId: F:TinyGiantStudio.Text.Modular3DText.maxFontSize
  id: maxFontSize
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: maxFontSize
  nameWithType: Modular3DText.maxFontSize
  fullName: TinyGiantStudio.Text.Modular3DText.maxFontSize
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: maxFontSize
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 806
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public Vector3 maxFontSize
    return:
      type: UnityEngine.Vector3
    content.vb: Public maxFontSize As Vector3
- uid: TinyGiantStudio.Text.Modular3DText.sizeGraceAmount
  commentId: F:TinyGiantStudio.Text.Modular3DText.sizeGraceAmount
  id: sizeGraceAmount
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: sizeGraceAmount
  nameWithType: Modular3DText.sizeGraceAmount
  fullName: TinyGiantStudio.Text.Modular3DText.sizeGraceAmount
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: sizeGraceAmount
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 809
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public float sizeGraceAmount
    return:
      type: System.Single
    content.vb: Public sizeGraceAmount As Single
- uid: TinyGiantStudio.Text.Modular3DText.fontSizeIterationAmount
  commentId: F:TinyGiantStudio.Text.Modular3DText.fontSizeIterationAmount
  id: fontSizeIterationAmount
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: fontSizeIterationAmount
  nameWithType: Modular3DText.fontSizeIterationAmount
  fullName: TinyGiantStudio.Text.Modular3DText.fontSizeIterationAmount
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: fontSizeIterationAmount
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 811
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public float fontSizeIterationAmount
    return:
      type: System.Single
    content.vb: Public fontSizeIterationAmount As Single
- uid: TinyGiantStudio.Text.Modular3DText.maxIterationTimes
  commentId: F:TinyGiantStudio.Text.Modular3DText.maxIterationTimes
  id: maxIterationTimes
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: maxIterationTimes
  nameWithType: Modular3DText.maxIterationTimes
  fullName: TinyGiantStudio.Text.Modular3DText.maxIterationTimes
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: maxIterationTimes
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 812
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public int maxIterationTimes
    return:
      type: System.Int32
    content.vb: Public maxIterationTimes As Integer
- uid: TinyGiantStudio.Text.Modular3DText.ShouldItCreateChild
  commentId: M:TinyGiantStudio.Text.Modular3DText.ShouldItCreateChild
  id: ShouldItCreateChild
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: ShouldItCreateChild()
  nameWithType: Modular3DText.ShouldItCreateChild()
  fullName: TinyGiantStudio.Text.Modular3DText.ShouldItCreateChild()
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: ShouldItCreateChild
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 1168
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: True = Create child objects
  example: []
  syntax:
    content: public bool ShouldItCreateChild()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ShouldItCreateChild() As Boolean
  overload: TinyGiantStudio.Text.Modular3DText.ShouldItCreateChild*
- uid: TinyGiantStudio.Text.Modular3DText.GetDeleteDurationFromEffects
  commentId: M:TinyGiantStudio.Text.Modular3DText.GetDeleteDurationFromEffects
  id: GetDeleteDurationFromEffects
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: GetDeleteDurationFromEffects()
  nameWithType: Modular3DText.GetDeleteDurationFromEffects()
  fullName: TinyGiantStudio.Text.Modular3DText.GetDeleteDurationFromEffects()
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: GetDeleteDurationFromEffects
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 1333
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public float GetDeleteDurationFromEffects()
    return:
      type: System.Single
    content.vb: Public Function GetDeleteDurationFromEffects() As Single
  overload: TinyGiantStudio.Text.Modular3DText.GetDeleteDurationFromEffects*
- uid: TinyGiantStudio.Text.Modular3DText.EmptyEffect(System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer})
  commentId: M:TinyGiantStudio.Text.Modular3DText.EmptyEffect(System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer})
  id: EmptyEffect(System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer})
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: EmptyEffect(List<ModuleContainer>)
  nameWithType: Modular3DText.EmptyEffect(List<ModuleContainer>)
  fullName: TinyGiantStudio.Text.Modular3DText.EmptyEffect(System.Collections.Generic.List<TinyGiantStudio.Modules.ModuleContainer>)
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: EmptyEffect
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 1525
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: Please use the method NewEffect, this will be removed at a later date.
  example: []
  syntax:
    content: public void EmptyEffect(List<ModuleContainer> moduleList)
    parameters:
    - id: moduleList
      type: System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer}
      description: ''
    content.vb: Public Sub EmptyEffect(moduleList As List(Of ModuleContainer))
  overload: TinyGiantStudio.Text.Modular3DText.EmptyEffect*
  nameWithType.vb: Modular3DText.EmptyEffect(List(Of ModuleContainer))
  fullName.vb: TinyGiantStudio.Text.Modular3DText.EmptyEffect(System.Collections.Generic.List(Of TinyGiantStudio.Modules.ModuleContainer))
  name.vb: EmptyEffect(List(Of ModuleContainer))
- uid: TinyGiantStudio.Text.Modular3DText.NewEffect(System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer},TinyGiantStudio.Modules.Module)
  commentId: M:TinyGiantStudio.Text.Modular3DText.NewEffect(System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer},TinyGiantStudio.Modules.Module)
  id: NewEffect(System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer},TinyGiantStudio.Modules.Module)
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: NewEffect(List<ModuleContainer>, Module)
  nameWithType: Modular3DText.NewEffect(List<ModuleContainer>, Module)
  fullName: TinyGiantStudio.Text.Modular3DText.NewEffect(System.Collections.Generic.List<TinyGiantStudio.Modules.ModuleContainer>, TinyGiantStudio.Modules.Module)
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: NewEffect
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 1535
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  syntax:
    content: public void NewEffect(List<ModuleContainer> moduleList, Module newModule = null)
    parameters:
    - id: moduleList
      type: System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer}
    - id: newModule
      type: TinyGiantStudio.Modules.Module
    content.vb: Public Sub NewEffect(moduleList As List(Of ModuleContainer), newModule As [Module] = Nothing)
  overload: TinyGiantStudio.Text.Modular3DText.NewEffect*
  nameWithType.vb: Modular3DText.NewEffect(List(Of ModuleContainer), Module)
  fullName.vb: TinyGiantStudio.Text.Modular3DText.NewEffect(System.Collections.Generic.List(Of TinyGiantStudio.Modules.ModuleContainer), TinyGiantStudio.Modules.Module)
  name.vb: NewEffect(List(Of ModuleContainer), Module)
- uid: TinyGiantStudio.Text.Modular3DText.DestroyMesh(UnityEngine.Mesh)
  commentId: M:TinyGiantStudio.Text.Modular3DText.DestroyMesh(UnityEngine.Mesh)
  id: DestroyMesh(UnityEngine.Mesh)
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: DestroyMesh(Mesh)
  nameWithType: Modular3DText.DestroyMesh(Mesh)
  fullName: TinyGiantStudio.Text.Modular3DText.DestroyMesh(UnityEngine.Mesh)
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: DestroyMesh
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 1554
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: This is used by a static method to destroy meshes
  example: []
  syntax:
    content: public void DestroyMesh(Mesh mesh)
    parameters:
    - id: mesh
      type: UnityEngine.Mesh
      description: ''
    content.vb: Public Sub DestroyMesh(mesh As Mesh)
  overload: TinyGiantStudio.Text.Modular3DText.DestroyMesh*
- uid: TinyGiantStudio.Text.Modular3DText.DoesStyleInheritFromAParent
  commentId: M:TinyGiantStudio.Text.Modular3DText.DoesStyleInheritFromAParent
  id: DoesStyleInheritFromAParent
  parent: TinyGiantStudio.Text.Modular3DText
  langs:
  - csharp
  - vb
  name: DoesStyleInheritFromAParent()
  nameWithType: Modular3DText.DoesStyleInheritFromAParent()
  fullName: TinyGiantStudio.Text.Modular3DText.DoesStyleInheritFromAParent()
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: DoesStyleInheritFromAParent
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Core Text/Modular3DText.cs
    startLine: 1698
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: Used by editor to write the values overwritten info message in the info box and hide property in inspector
  example: []
  syntax:
    content: public bool DoesStyleInheritFromAParent()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function DoesStyleInheritFromAParent() As Boolean
  overload: TinyGiantStudio.Text.Modular3DText.DoesStyleInheritFromAParent*
references:
- uid: TinyGiantStudio.Text
  commentId: N:TinyGiantStudio.Text
  href: TinyGiantStudio.html
  name: TinyGiantStudio.Text
  nameWithType: TinyGiantStudio.Text
  fullName: TinyGiantStudio.Text
  spec.csharp:
  - uid: TinyGiantStudio
    name: TinyGiantStudio
    href: TinyGiantStudio.html
  - name: .
  - uid: TinyGiantStudio.Text
    name: Text
    href: TinyGiantStudio.Text.html
  spec.vb:
  - uid: TinyGiantStudio
    name: TinyGiantStudio
    href: TinyGiantStudio.html
  - name: .
  - uid: TinyGiantStudio.Text
    name: Text
    href: TinyGiantStudio.Text.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: TinyGiantStudio.Text.Modular3DText.Text*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.Text
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_Text
  name: Text
  nameWithType: Modular3DText.Text
  fullName: TinyGiantStudio.Text.Modular3DText.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.String[]
  isExternal: true
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
- uid: System.Collections.Generic.List{UnityEngine.GameObject}
  commentId: T:System.Collections.Generic.List{UnityEngine.GameObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GameObject>
  nameWithType: List<GameObject>
  fullName: System.Collections.Generic.List<UnityEngine.GameObject>
  nameWithType.vb: List(Of GameObject)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.GameObject)
  name.vb: List(Of GameObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.Collections.Generic.List{UnityEngine.Mesh}
  commentId: T:System.Collections.Generic.List{UnityEngine.Mesh}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Mesh>
  nameWithType: List<Mesh>
  fullName: System.Collections.Generic.List<UnityEngine.Mesh>
  nameWithType.vb: List(Of Mesh)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Mesh)
  name.vb: List(Of Mesh)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: UnityEngine.Mesh
    name: Mesh
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Mesh
    name: Mesh
    isExternal: true
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyGiantStudio.Text.Modular3DText.Font*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.Font
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_Font
  name: Font
  nameWithType: Modular3DText.Font
  fullName: TinyGiantStudio.Text.Modular3DText.Font
- uid: TinyGiantStudio.Text.Font
  commentId: T:TinyGiantStudio.Text.Font
  parent: TinyGiantStudio.Text
  href: TinyGiantStudio.Text.Font.html
  name: Font
  nameWithType: Font
  fullName: TinyGiantStudio.Text.Font
- uid: TinyGiantStudio.Text.Modular3DText.Material*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.Material
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_Material
  name: Material
  nameWithType: Modular3DText.Material
  fullName: TinyGiantStudio.Text.Modular3DText.Material
- uid: UnityEngine.Material
  commentId: T:UnityEngine.Material
  parent: UnityEngine
  isExternal: true
  name: Material
  nameWithType: Material
  fullName: UnityEngine.Material
- uid: TinyGiantStudio.Text.Modular3DText.FontSize*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.FontSize
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_FontSize
  name: FontSize
  nameWithType: Modular3DText.FontSize
  fullName: TinyGiantStudio.Text.Modular3DText.FontSize
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: TinyGiantStudio.Text.Modular3DText.Capitalize*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.Capitalize
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_Capitalize
  name: Capitalize
  nameWithType: Modular3DText.Capitalize
  fullName: TinyGiantStudio.Text.Modular3DText.Capitalize
- uid: TinyGiantStudio.Text.Modular3DText.LowerCase*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.LowerCase
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_LowerCase
  name: LowerCase
  nameWithType: Modular3DText.LowerCase
  fullName: TinyGiantStudio.Text.Modular3DText.LowerCase
- uid: TinyGiantStudio.Text.Modular3DText.AutoLetterSize*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.AutoLetterSize
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_AutoLetterSize
  name: AutoLetterSize
  nameWithType: Modular3DText.AutoLetterSize
  fullName: TinyGiantStudio.Text.Modular3DText.AutoLetterSize
- uid: TinyGiantStudio.Text.Modular3DText.WordSpacing*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.WordSpacing
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_WordSpacing
  name: WordSpacing
  nameWithType: Modular3DText.WordSpacing
  fullName: TinyGiantStudio.Text.Modular3DText.WordSpacing
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer}
  commentId: T:System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: TinyGiantStudio.Modules.ModuleContainer.html
  name: List<ModuleContainer>
  nameWithType: List<ModuleContainer>
  fullName: System.Collections.Generic.List<TinyGiantStudio.Modules.ModuleContainer>
  nameWithType.vb: List(Of ModuleContainer)
  fullName.vb: System.Collections.Generic.List(Of TinyGiantStudio.Modules.ModuleContainer)
  name.vb: List(Of ModuleContainer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: TinyGiantStudio.Modules.ModuleContainer
    name: ModuleContainer
    href: TinyGiantStudio.Modules.ModuleContainer.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: TinyGiantStudio.Modules.ModuleContainer
    name: ModuleContainer
    href: TinyGiantStudio.Modules.ModuleContainer.html
  - name: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: TinyGiantStudio.Text.MeshPostProcess
  commentId: T:TinyGiantStudio.Text.MeshPostProcess
  parent: TinyGiantStudio.Text
  href: TinyGiantStudio.Text.MeshPostProcess.html
  name: MeshPostProcess
  nameWithType: MeshPostProcess
  fullName: TinyGiantStudio.Text.MeshPostProcess
- uid: TinyGiantStudio.Text.Modular3DText.CleanUpdateText*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.CleanUpdateText
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_CleanUpdateText
  name: CleanUpdateText
  nameWithType: Modular3DText.CleanUpdateText
  fullName: TinyGiantStudio.Text.Modular3DText.CleanUpdateText
- uid: TinyGiantStudio.Text.Modular3DText.UpdateText*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.UpdateText
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_UpdateText_System_String_
  name: UpdateText
  nameWithType: Modular3DText.UpdateText
  fullName: TinyGiantStudio.Text.Modular3DText.UpdateText
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyGiantStudio.Text.Modular3DText.ShouldItCreateChild*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.ShouldItCreateChild
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_ShouldItCreateChild
  name: ShouldItCreateChild
  nameWithType: Modular3DText.ShouldItCreateChild
  fullName: TinyGiantStudio.Text.Modular3DText.ShouldItCreateChild
- uid: TinyGiantStudio.Text.Modular3DText.GetDeleteDurationFromEffects*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.GetDeleteDurationFromEffects
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_GetDeleteDurationFromEffects
  name: GetDeleteDurationFromEffects
  nameWithType: Modular3DText.GetDeleteDurationFromEffects
  fullName: TinyGiantStudio.Text.Modular3DText.GetDeleteDurationFromEffects
- uid: TinyGiantStudio.Text.Modular3DText.EmptyEffect*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.EmptyEffect
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_EmptyEffect_System_Collections_Generic_List_TinyGiantStudio_Modules_ModuleContainer__
  name: EmptyEffect
  nameWithType: Modular3DText.EmptyEffect
  fullName: TinyGiantStudio.Text.Modular3DText.EmptyEffect
- uid: TinyGiantStudio.Text.Modular3DText.NewEffect*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.NewEffect
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_NewEffect_System_Collections_Generic_List_TinyGiantStudio_Modules_ModuleContainer__TinyGiantStudio_Modules_Module_
  name: NewEffect
  nameWithType: Modular3DText.NewEffect
  fullName: TinyGiantStudio.Text.Modular3DText.NewEffect
- uid: TinyGiantStudio.Modules.Module
  commentId: T:TinyGiantStudio.Modules.Module
  parent: TinyGiantStudio.Modules
  href: TinyGiantStudio.Modules.Module.html
  name: Module
  nameWithType: Module
  fullName: TinyGiantStudio.Modules.Module
- uid: TinyGiantStudio.Modules
  commentId: N:TinyGiantStudio.Modules
  href: TinyGiantStudio.html
  name: TinyGiantStudio.Modules
  nameWithType: TinyGiantStudio.Modules
  fullName: TinyGiantStudio.Modules
  spec.csharp:
  - uid: TinyGiantStudio
    name: TinyGiantStudio
    href: TinyGiantStudio.html
  - name: .
  - uid: TinyGiantStudio.Modules
    name: Modules
    href: TinyGiantStudio.Modules.html
  spec.vb:
  - uid: TinyGiantStudio
    name: TinyGiantStudio
    href: TinyGiantStudio.html
  - name: .
  - uid: TinyGiantStudio.Modules
    name: Modules
    href: TinyGiantStudio.Modules.html
- uid: TinyGiantStudio.Text.Modular3DText.DestroyMesh*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.DestroyMesh
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_DestroyMesh_UnityEngine_Mesh_
  name: DestroyMesh
  nameWithType: Modular3DText.DestroyMesh
  fullName: TinyGiantStudio.Text.Modular3DText.DestroyMesh
- uid: UnityEngine.Mesh
  commentId: T:UnityEngine.Mesh
  parent: UnityEngine
  isExternal: true
  name: Mesh
  nameWithType: Mesh
  fullName: UnityEngine.Mesh
- uid: TinyGiantStudio.Text.Modular3DText.DoesStyleInheritFromAParent*
  commentId: Overload:TinyGiantStudio.Text.Modular3DText.DoesStyleInheritFromAParent
  href: TinyGiantStudio.Text.Modular3DText.html#TinyGiantStudio_Text_Modular3DText_DoesStyleInheritFromAParent
  name: DoesStyleInheritFromAParent
  nameWithType: Modular3DText.DoesStyleInheritFromAParent
  fullName: TinyGiantStudio.Text.Modular3DText.DoesStyleInheritFromAParent
