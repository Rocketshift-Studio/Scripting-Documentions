### YamlMime:ManagedReference
items:
- uid: TinyGiantStudio.Text.FontCreation.MText_FontExporter
  commentId: T:TinyGiantStudio.Text.FontCreation.MText_FontExporter
  id: MText_FontExporter
  parent: TinyGiantStudio.Text.FontCreation
  children:
  - TinyGiantStudio.Text.FontCreation.MText_FontExporter.CreateFontFile(System.String,System.String,TinyGiantStudio.Text.FontCreation.CharacterGenerator,System.Byte[])
  langs:
  - csharp
  - vb
  name: MText_FontExporter
  nameWithType: MText_FontExporter
  fullName: TinyGiantStudio.Text.FontCreation.MText_FontExporter
  type: Class
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Editor/Font/Font Creator/MText_FontExporter.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: MText_FontExporter
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Editor/Font/Font Creator/MText_FontExporter.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp-Editor-firstpass
  namespace: TinyGiantStudio.Text.FontCreation
  syntax:
    content: public class MText_FontExporter
    content.vb: Public Class MText_FontExporter
  inheritance:
  - System.Object
- uid: TinyGiantStudio.Text.FontCreation.MText_FontExporter.CreateFontFile(System.String,System.String,TinyGiantStudio.Text.FontCreation.CharacterGenerator,System.Byte[])
  commentId: M:TinyGiantStudio.Text.FontCreation.MText_FontExporter.CreateFontFile(System.String,System.String,TinyGiantStudio.Text.FontCreation.CharacterGenerator,System.Byte[])
  id: CreateFontFile(System.String,System.String,TinyGiantStudio.Text.FontCreation.CharacterGenerator,System.Byte[])
  parent: TinyGiantStudio.Text.FontCreation.MText_FontExporter
  langs:
  - csharp
  - vb
  name: CreateFontFile(string, string, CharacterGenerator, byte[])
  nameWithType: MText_FontExporter.CreateFontFile(string, string, CharacterGenerator, byte[])
  fullName: TinyGiantStudio.Text.FontCreation.MText_FontExporter.CreateFontFile(string, string, TinyGiantStudio.Text.FontCreation.CharacterGenerator, byte[])
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Editor/Font/Font Creator/MText_FontExporter.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: CreateFontFile
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Editor/Font/Font Creator/MText_FontExporter.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp-Editor-firstpass
  namespace: TinyGiantStudio.Text.FontCreation
  syntax:
    content: public void CreateFontFile(string prefabPath, string fontName, CharacterGenerator fontCreator, byte[] fontData)
    parameters:
    - id: prefabPath
      type: System.String
    - id: fontName
      type: System.String
    - id: fontCreator
      type: TinyGiantStudio.Text.FontCreation.CharacterGenerator
    - id: fontData
      type: System.Byte[]
    content.vb: Public Sub CreateFontFile(prefabPath As String, fontName As String, fontCreator As CharacterGenerator, fontData As Byte())
  overload: TinyGiantStudio.Text.FontCreation.MText_FontExporter.CreateFontFile*
  nameWithType.vb: MText_FontExporter.CreateFontFile(String, String, CharacterGenerator, Byte())
  fullName.vb: TinyGiantStudio.Text.FontCreation.MText_FontExporter.CreateFontFile(String, String, TinyGiantStudio.Text.FontCreation.CharacterGenerator, Byte())
  name.vb: CreateFontFile(String, String, CharacterGenerator, Byte())
references:
- uid: TinyGiantStudio.Text.FontCreation
  commentId: N:TinyGiantStudio.Text.FontCreation
  href: TinyGiantStudio.html
  name: TinyGiantStudio.Text.FontCreation
  nameWithType: TinyGiantStudio.Text.FontCreation
  fullName: TinyGiantStudio.Text.FontCreation
  spec.csharp:
  - uid: TinyGiantStudio
    name: TinyGiantStudio
    href: TinyGiantStudio.html
  - name: .
  - uid: TinyGiantStudio.Text
    name: Text
    href: TinyGiantStudio.Text.html
  - name: .
  - uid: TinyGiantStudio.Text.FontCreation
    name: FontCreation
    href: TinyGiantStudio.Text.FontCreation.html
  spec.vb:
  - uid: TinyGiantStudio
    name: TinyGiantStudio
    href: TinyGiantStudio.html
  - name: .
  - uid: TinyGiantStudio.Text
    name: Text
    href: TinyGiantStudio.Text.html
  - name: .
  - uid: TinyGiantStudio.Text.FontCreation
    name: FontCreation
    href: TinyGiantStudio.Text.FontCreation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyGiantStudio.Text.FontCreation.MText_FontExporter.CreateFontFile*
  commentId: Overload:TinyGiantStudio.Text.FontCreation.MText_FontExporter.CreateFontFile
  href: TinyGiantStudio.Text.FontCreation.MText_FontExporter.html#TinyGiantStudio_Text_FontCreation_MText_FontExporter_CreateFontFile_System_String_System_String_TinyGiantStudio_Text_FontCreation_CharacterGenerator_System_Byte___
  name: CreateFontFile
  nameWithType: MText_FontExporter.CreateFontFile
  fullName: TinyGiantStudio.Text.FontCreation.MText_FontExporter.CreateFontFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyGiantStudio.Text.FontCreation.CharacterGenerator
  commentId: T:TinyGiantStudio.Text.FontCreation.CharacterGenerator
  parent: TinyGiantStudio.Text.FontCreation
  isExternal: true
  name: CharacterGenerator
  nameWithType: CharacterGenerator
  fullName: TinyGiantStudio.Text.FontCreation.CharacterGenerator
- uid: System.Byte[]
  isExternal: true
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
