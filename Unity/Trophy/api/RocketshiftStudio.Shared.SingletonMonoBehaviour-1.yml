### YamlMime:ManagedReference
items:
- uid: RocketshiftStudio.Shared.SingletonMonoBehaviour`1
  commentId: T:RocketshiftStudio.Shared.SingletonMonoBehaviour`1
  id: SingletonMonoBehaviour`1
  parent: RocketshiftStudio.Shared
  children:
  - RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Awake
  - RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Instance
  langs:
  - csharp
  - vb
  name: SingletonMonoBehaviour<T>
  nameWithType: SingletonMonoBehaviour<T>
  fullName: RocketshiftStudio.Shared.SingletonMonoBehaviour<T>
  type: Class
  source:
    remote:
      path: Assets/Rocketshift Studio/Shared/Scripts/SingletonMonoBehaviour.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: SingletonMonoBehaviour
    path: ../Assets/Rocketshift Studio/Shared/Scripts/SingletonMonoBehaviour.cs
    startLine: 4
  assemblies:
  - RocketshiftStudio.Shared
  namespace: RocketshiftStudio.Shared
  syntax:
    content: >-
      [DisallowMultipleComponent]

      public abstract class SingletonMonoBehaviour<T> : MonoBehaviour where T : MonoBehaviour
    typeParameters:
    - id: T
    content.vb: >-
      <DisallowMultipleComponent>

      Public MustInherit Class SingletonMonoBehaviour(Of T As MonoBehaviour) Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  derivedClasses:
  - RocketshiftStudio.Trophy.Trophy
  attributes:
  - type: UnityEngine.DisallowMultipleComponent
    ctor: UnityEngine.DisallowMultipleComponent.#ctor
    arguments: []
  nameWithType.vb: SingletonMonoBehaviour(Of T)
  fullName.vb: RocketshiftStudio.Shared.SingletonMonoBehaviour(Of T)
  name.vb: SingletonMonoBehaviour(Of T)
- uid: RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Instance
  commentId: P:RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Instance
  id: Instance
  parent: RocketshiftStudio.Shared.SingletonMonoBehaviour`1
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: SingletonMonoBehaviour<T>.Instance
  fullName: RocketshiftStudio.Shared.SingletonMonoBehaviour<T>.Instance
  type: Property
  source:
    remote:
      path: Assets/Rocketshift Studio/Shared/Scripts/SingletonMonoBehaviour.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: Instance
    path: ../Assets/Rocketshift Studio/Shared/Scripts/SingletonMonoBehaviour.cs
    startLine: 8
  assemblies:
  - RocketshiftStudio.Shared
  namespace: RocketshiftStudio.Shared
  syntax:
    content: public static T Instance { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Shared Property Instance As T
  overload: RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Instance*
  nameWithType.vb: SingletonMonoBehaviour(Of T).Instance
  fullName.vb: RocketshiftStudio.Shared.SingletonMonoBehaviour(Of T).Instance
- uid: RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Awake
  commentId: M:RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Awake
  id: Awake
  parent: RocketshiftStudio.Shared.SingletonMonoBehaviour`1
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: SingletonMonoBehaviour<T>.Awake()
  fullName: RocketshiftStudio.Shared.SingletonMonoBehaviour<T>.Awake()
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Shared/Scripts/SingletonMonoBehaviour.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: Awake
    path: ../Assets/Rocketshift Studio/Shared/Scripts/SingletonMonoBehaviour.cs
    startLine: 22
  assemblies:
  - RocketshiftStudio.Shared
  namespace: RocketshiftStudio.Shared
  syntax:
    content: protected virtual void Awake()
    content.vb: Protected Overridable Sub Awake()
  overload: RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Awake*
  nameWithType.vb: SingletonMonoBehaviour(Of T).Awake()
  fullName.vb: RocketshiftStudio.Shared.SingletonMonoBehaviour(Of T).Awake()
references:
- uid: RocketshiftStudio.Shared
  commentId: N:RocketshiftStudio.Shared
  href: RocketshiftStudio.html
  name: RocketshiftStudio.Shared
  nameWithType: RocketshiftStudio.Shared
  fullName: RocketshiftStudio.Shared
  spec.csharp:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Shared
    name: Shared
    href: RocketshiftStudio.Shared.html
  spec.vb:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Shared
    name: Shared
    href: RocketshiftStudio.Shared.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Instance*
  commentId: Overload:RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Instance
  href: RocketshiftStudio.Shared.SingletonMonoBehaviour-1.html#RocketshiftStudio_Shared_SingletonMonoBehaviour_1_Instance
  name: Instance
  nameWithType: SingletonMonoBehaviour<T>.Instance
  fullName: RocketshiftStudio.Shared.SingletonMonoBehaviour<T>.Instance
  nameWithType.vb: SingletonMonoBehaviour(Of T).Instance
  fullName.vb: RocketshiftStudio.Shared.SingletonMonoBehaviour(Of T).Instance
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  commentId: '!:T'
  name: T
  nameWithType: T
  fullName: T
- uid: RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Awake*
  commentId: Overload:RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Awake
  href: RocketshiftStudio.Shared.SingletonMonoBehaviour-1.html#RocketshiftStudio_Shared_SingletonMonoBehaviour_1_Awake
  name: Awake
  nameWithType: SingletonMonoBehaviour<T>.Awake
  fullName: RocketshiftStudio.Shared.SingletonMonoBehaviour<T>.Awake
  nameWithType.vb: SingletonMonoBehaviour(Of T).Awake
  fullName.vb: RocketshiftStudio.Shared.SingletonMonoBehaviour(Of T).Awake
