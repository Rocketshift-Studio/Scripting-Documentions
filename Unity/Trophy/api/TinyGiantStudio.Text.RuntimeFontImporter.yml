### YamlMime:ManagedReference
items:
- uid: TinyGiantStudio.Text.RuntimeFontImporter
  commentId: T:TinyGiantStudio.Text.RuntimeFontImporter
  id: RuntimeFontImporter
  parent: TinyGiantStudio.Text
  children:
  - TinyGiantStudio.Text.RuntimeFontImporter.CreateFontFromTTFFile(System.Byte[])
  langs:
  - csharp
  - vb
  name: RuntimeFontImporter
  nameWithType: RuntimeFontImporter
  fullName: TinyGiantStudio.Text.RuntimeFontImporter
  type: Class
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Font/RuntimeFontImporter.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: RuntimeFontImporter
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Font/RuntimeFontImporter.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: >-
    This handles importing font files during runtime.

    Call CreateFontFromTTFFile(byte[] rfontBytes), pass the TTF file as a byte array and it will return a new Font.
  example: []
  syntax:
    content: 'public class RuntimeFontImporter : MonoBehaviour'
    content.vb: Public Class RuntimeFontImporter Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
- uid: TinyGiantStudio.Text.RuntimeFontImporter.CreateFontFromTTFFile(System.Byte[])
  commentId: M:TinyGiantStudio.Text.RuntimeFontImporter.CreateFontFromTTFFile(System.Byte[])
  id: CreateFontFromTTFFile(System.Byte[])
  parent: TinyGiantStudio.Text.RuntimeFontImporter
  langs:
  - csharp
  - vb
  name: CreateFontFromTTFFile(byte[])
  nameWithType: RuntimeFontImporter.CreateFontFromTTFFile(byte[])
  fullName: TinyGiantStudio.Text.RuntimeFontImporter.CreateFontFromTTFFile(byte[])
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Font/RuntimeFontImporter.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: CreateFontFromTTFFile
    path: ../Assets/Plugins/Tiny Giant Studio/Modular 3D Text/Scripts/Font/RuntimeFontImporter.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Text
  summary: Pass the TTF file as a byte array and it will return a new Font.
  example: []
  syntax:
    content: public Font CreateFontFromTTFFile(byte[] fontBytes)
    parameters:
    - id: fontBytes
      type: System.Byte[]
      description: Content of the TTF file converted into a byte array.
    return:
      type: TinyGiantStudio.Text.Font
      description: ''
    content.vb: Public Function CreateFontFromTTFFile(fontBytes As Byte()) As Font
  overload: TinyGiantStudio.Text.RuntimeFontImporter.CreateFontFromTTFFile*
  nameWithType.vb: RuntimeFontImporter.CreateFontFromTTFFile(Byte())
  fullName.vb: TinyGiantStudio.Text.RuntimeFontImporter.CreateFontFromTTFFile(Byte())
  name.vb: CreateFontFromTTFFile(Byte())
references:
- uid: TinyGiantStudio.Text
  commentId: N:TinyGiantStudio.Text
  href: TinyGiantStudio.html
  name: TinyGiantStudio.Text
  nameWithType: TinyGiantStudio.Text
  fullName: TinyGiantStudio.Text
  spec.csharp:
  - uid: TinyGiantStudio
    name: TinyGiantStudio
    href: TinyGiantStudio.html
  - name: .
  - uid: TinyGiantStudio.Text
    name: Text
    href: TinyGiantStudio.Text.html
  spec.vb:
  - uid: TinyGiantStudio
    name: TinyGiantStudio
    href: TinyGiantStudio.html
  - name: .
  - uid: TinyGiantStudio.Text
    name: Text
    href: TinyGiantStudio.Text.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: TinyGiantStudio.Text.RuntimeFontImporter.CreateFontFromTTFFile*
  commentId: Overload:TinyGiantStudio.Text.RuntimeFontImporter.CreateFontFromTTFFile
  href: TinyGiantStudio.Text.RuntimeFontImporter.html#TinyGiantStudio_Text_RuntimeFontImporter_CreateFontFromTTFFile_System_Byte___
  name: CreateFontFromTTFFile
  nameWithType: RuntimeFontImporter.CreateFontFromTTFFile
  fullName: TinyGiantStudio.Text.RuntimeFontImporter.CreateFontFromTTFFile
- uid: System.Byte[]
  isExternal: true
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
- uid: TinyGiantStudio.Text.Font
  commentId: T:TinyGiantStudio.Text.Font
  parent: TinyGiantStudio.Text
  href: TinyGiantStudio.Text.Font.html
  name: Font
  nameWithType: Font
  fullName: TinyGiantStudio.Text.Font
