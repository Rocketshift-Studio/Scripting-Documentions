### YamlMime:ManagedReference
items:
- uid: TinyGiantStudio.Modules.ModuleApplier
  commentId: T:TinyGiantStudio.Modules.ModuleApplier
  id: ModuleApplier
  parent: TinyGiantStudio.Modules
  children:
  - TinyGiantStudio.Modules.ModuleApplier.ApplyAllModule
  - TinyGiantStudio.Modules.ModuleApplier.ApplyModule(System.Int32)
  - TinyGiantStudio.Modules.ModuleApplier.applyModules
  - TinyGiantStudio.Modules.ModuleApplier.moduleTarget
  - TinyGiantStudio.Modules.ModuleApplier.modules
  langs:
  - csharp
  - vb
  name: ModuleApplier
  nameWithType: ModuleApplier
  fullName: TinyGiantStudio.Modules.ModuleApplier
  type: Class
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modules/Scripts/ModuleApplier.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: ModuleApplier
    path: ../Assets/Plugins/Tiny Giant Studio/Modules/Scripts/ModuleApplier.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Modules
  syntax:
    content: 'public class ModuleApplier : MonoBehaviour'
    content.vb: Public Class ModuleApplier Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
- uid: TinyGiantStudio.Modules.ModuleApplier.moduleTarget
  commentId: F:TinyGiantStudio.Modules.ModuleApplier.moduleTarget
  id: moduleTarget
  parent: TinyGiantStudio.Modules.ModuleApplier
  langs:
  - csharp
  - vb
  name: moduleTarget
  nameWithType: ModuleApplier.moduleTarget
  fullName: TinyGiantStudio.Modules.ModuleApplier.moduleTarget
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modules/Scripts/ModuleApplier.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: moduleTarget
    path: ../Assets/Plugins/Tiny Giant Studio/Modules/Scripts/ModuleApplier.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Modules
  syntax:
    content: public GameObject moduleTarget
    return:
      type: UnityEngine.GameObject
    content.vb: Public moduleTarget As GameObject
- uid: TinyGiantStudio.Modules.ModuleApplier.modules
  commentId: F:TinyGiantStudio.Modules.ModuleApplier.modules
  id: modules
  parent: TinyGiantStudio.Modules.ModuleApplier
  langs:
  - csharp
  - vb
  name: modules
  nameWithType: ModuleApplier.modules
  fullName: TinyGiantStudio.Modules.ModuleApplier.modules
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modules/Scripts/ModuleApplier.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: modules
    path: ../Assets/Plugins/Tiny Giant Studio/Modules/Scripts/ModuleApplier.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Modules
  syntax:
    content: >-
      [Tooltip("Target needs to be enabled to apply module")]

      public List<ModuleContainer> modules
    return:
      type: System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer}
    content.vb: >-
      <Tooltip("Target needs to be enabled to apply module")>

      Public modules As List(Of ModuleContainer)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Target needs to be enabled to apply module
- uid: TinyGiantStudio.Modules.ModuleApplier.applyModules
  commentId: F:TinyGiantStudio.Modules.ModuleApplier.applyModules
  id: applyModules
  parent: TinyGiantStudio.Modules.ModuleApplier
  langs:
  - csharp
  - vb
  name: applyModules
  nameWithType: ModuleApplier.applyModules
  fullName: TinyGiantStudio.Modules.ModuleApplier.applyModules
  type: Field
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modules/Scripts/ModuleApplier.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: applyModules
    path: ../Assets/Plugins/Tiny Giant Studio/Modules/Scripts/ModuleApplier.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Modules
  syntax:
    content: public bool applyModules
    return:
      type: System.Boolean
    content.vb: Public applyModules As Boolean
- uid: TinyGiantStudio.Modules.ModuleApplier.ApplyAllModule
  commentId: M:TinyGiantStudio.Modules.ModuleApplier.ApplyAllModule
  id: ApplyAllModule
  parent: TinyGiantStudio.Modules.ModuleApplier
  langs:
  - csharp
  - vb
  name: ApplyAllModule()
  nameWithType: ModuleApplier.ApplyAllModule()
  fullName: TinyGiantStudio.Modules.ModuleApplier.ApplyAllModule()
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modules/Scripts/ModuleApplier.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: ApplyAllModule
    path: ../Assets/Plugins/Tiny Giant Studio/Modules/Scripts/ModuleApplier.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Modules
  syntax:
    content: >-
      [ContextMenu("Apply all modules")]

      public void ApplyAllModule()
    content.vb: >-
      <ContextMenu("Apply all modules")>

      Public Sub ApplyAllModule()
  overload: TinyGiantStudio.Modules.ModuleApplier.ApplyAllModule*
  attributes:
  - type: UnityEngine.ContextMenu
    ctor: UnityEngine.ContextMenu.#ctor(System.String)
    arguments:
    - type: System.String
      value: Apply all modules
- uid: TinyGiantStudio.Modules.ModuleApplier.ApplyModule(System.Int32)
  commentId: M:TinyGiantStudio.Modules.ModuleApplier.ApplyModule(System.Int32)
  id: ApplyModule(System.Int32)
  parent: TinyGiantStudio.Modules.ModuleApplier
  langs:
  - csharp
  - vb
  name: ApplyModule(int)
  nameWithType: ModuleApplier.ApplyModule(int)
  fullName: TinyGiantStudio.Modules.ModuleApplier.ApplyModule(int)
  type: Method
  source:
    remote:
      path: Assets/Plugins/Tiny Giant Studio/Modules/Scripts/ModuleApplier.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: ApplyModule
    path: ../Assets/Plugins/Tiny Giant Studio/Modules/Scripts/ModuleApplier.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: TinyGiantStudio.Modules
  syntax:
    content: public void ApplyModule(int i)
    parameters:
    - id: i
      type: System.Int32
    content.vb: Public Sub ApplyModule(i As Integer)
  overload: TinyGiantStudio.Modules.ModuleApplier.ApplyModule*
  nameWithType.vb: ModuleApplier.ApplyModule(Integer)
  fullName.vb: TinyGiantStudio.Modules.ModuleApplier.ApplyModule(Integer)
  name.vb: ApplyModule(Integer)
references:
- uid: TinyGiantStudio.Modules
  commentId: N:TinyGiantStudio.Modules
  href: TinyGiantStudio.html
  name: TinyGiantStudio.Modules
  nameWithType: TinyGiantStudio.Modules
  fullName: TinyGiantStudio.Modules
  spec.csharp:
  - uid: TinyGiantStudio
    name: TinyGiantStudio
    href: TinyGiantStudio.html
  - name: .
  - uid: TinyGiantStudio.Modules
    name: Modules
    href: TinyGiantStudio.Modules.html
  spec.vb:
  - uid: TinyGiantStudio
    name: TinyGiantStudio
    href: TinyGiantStudio.html
  - name: .
  - uid: TinyGiantStudio.Modules
    name: Modules
    href: TinyGiantStudio.Modules.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer}
  commentId: T:System.Collections.Generic.List{TinyGiantStudio.Modules.ModuleContainer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: TinyGiantStudio.Modules.ModuleContainer.html
  name: List<ModuleContainer>
  nameWithType: List<ModuleContainer>
  fullName: System.Collections.Generic.List<TinyGiantStudio.Modules.ModuleContainer>
  nameWithType.vb: List(Of ModuleContainer)
  fullName.vb: System.Collections.Generic.List(Of TinyGiantStudio.Modules.ModuleContainer)
  name.vb: List(Of ModuleContainer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: TinyGiantStudio.Modules.ModuleContainer
    name: ModuleContainer
    href: TinyGiantStudio.Modules.ModuleContainer.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: TinyGiantStudio.Modules.ModuleContainer
    name: ModuleContainer
    href: TinyGiantStudio.Modules.ModuleContainer.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyGiantStudio.Modules.ModuleApplier.ApplyAllModule*
  commentId: Overload:TinyGiantStudio.Modules.ModuleApplier.ApplyAllModule
  href: TinyGiantStudio.Modules.ModuleApplier.html#TinyGiantStudio_Modules_ModuleApplier_ApplyAllModule
  name: ApplyAllModule
  nameWithType: ModuleApplier.ApplyAllModule
  fullName: TinyGiantStudio.Modules.ModuleApplier.ApplyAllModule
- uid: TinyGiantStudio.Modules.ModuleApplier.ApplyModule*
  commentId: Overload:TinyGiantStudio.Modules.ModuleApplier.ApplyModule
  href: TinyGiantStudio.Modules.ModuleApplier.html#TinyGiantStudio_Modules_ModuleApplier_ApplyModule_System_Int32_
  name: ApplyModule
  nameWithType: ModuleApplier.ApplyModule
  fullName: TinyGiantStudio.Modules.ModuleApplier.ApplyModule
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
