### YamlMime:ManagedReference
items:
- uid: RocketshiftStudio.Editor.Trophy.TrophyExplorerWindow
  commentId: T:RocketshiftStudio.Editor.Trophy.TrophyExplorerWindow
  id: TrophyExplorerWindow
  parent: RocketshiftStudio.Editor.Trophy
  children: []
  langs:
  - csharp
  - vb
  name: TrophyExplorerWindow
  nameWithType: TrophyExplorerWindow
  fullName: RocketshiftStudio.Editor.Trophy.TrophyExplorerWindow
  type: Class
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Editor/Debug/TrophyExplorerWindow.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: TrophyExplorerWindow
    path: ../Assets/Rocketshift Studio/Systems/Trophy/Scripts/Editor/Debug/TrophyExplorerWindow.cs
    startLine: 14
  assemblies:
  - RocketshiftStudio.Editor.Trophy
  namespace: RocketshiftStudio.Editor.Trophy
  syntax:
    content: 'public sealed class TrophyExplorerWindow : EditorWindow'
    content.vb: Public NotInheritable Class TrophyExplorerWindow Inherits EditorWindow
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  - UnityEditor.EditorWindow
  inheritedMembers:
  - UnityEditor.EditorWindow.BeginWindows
  - UnityEditor.EditorWindow.EndWindows
  - UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent)
  - UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent,System.Double)
  - UnityEditor.EditorWindow.RemoveNotification
  - UnityEditor.EditorWindow.ShowTab
  - UnityEditor.EditorWindow.Focus
  - UnityEditor.EditorWindow.ShowUtility
  - UnityEditor.EditorWindow.ShowPopup
  - UnityEditor.EditorWindow.ShowModalUtility
  - UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect,UnityEngine.Vector2)
  - UnityEditor.EditorWindow.Show
  - UnityEditor.EditorWindow.Show(System.Boolean)
  - UnityEditor.EditorWindow.ShowAuxWindow
  - UnityEditor.EditorWindow.ShowModal
  - UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String,System.Boolean)
  - UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String)
  - UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean)
  - UnityEditor.EditorWindow.GetWindow(System.Type)
  - UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean,System.String)
  - UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean)
  - UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect)
  - UnityEditor.EditorWindow.GetWindow``1
  - UnityEditor.EditorWindow.GetWindow``1(System.Boolean)
  - UnityEditor.EditorWindow.GetWindow``1(System.Boolean,System.String)
  - UnityEditor.EditorWindow.GetWindow``1(System.String)
  - UnityEditor.EditorWindow.GetWindow``1(System.String,System.Boolean)
  - UnityEditor.EditorWindow.GetWindow``1(System.Boolean,System.String,System.Boolean)
  - UnityEditor.EditorWindow.GetWindow``1(System.Type[])
  - UnityEditor.EditorWindow.GetWindow``1(System.String,System.Type[])
  - UnityEditor.EditorWindow.GetWindow``1(System.String,System.Boolean,System.Type[])
  - UnityEditor.EditorWindow.CreateWindow``1(System.Type[])
  - UnityEditor.EditorWindow.CreateWindow``1(System.String,System.Type[])
  - UnityEditor.EditorWindow.HasOpenInstances``1
  - UnityEditor.EditorWindow.FocusWindowIfItsOpen(System.Type)
  - UnityEditor.EditorWindow.FocusWindowIfItsOpen``1
  - UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect)
  - UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean)
  - UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean,System.String)
  - UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean,System.String,System.Boolean)
  - UnityEditor.EditorWindow.SaveChanges
  - UnityEditor.EditorWindow.DiscardChanges
  - UnityEditor.EditorWindow.Close
  - UnityEditor.EditorWindow.Repaint
  - UnityEditor.EditorWindow.SendEvent(UnityEngine.Event)
  - UnityEditor.EditorWindow.GetExtraPaneTypes
  - UnityEditor.EditorWindow.TryGetOverlay(System.String,UnityEditor.Overlays.Overlay@)
  - UnityEditor.EditorWindow.dataModeController
  - UnityEditor.EditorWindow.rootVisualElement
  - UnityEditor.EditorWindow.overlayCanvas
  - UnityEditor.EditorWindow.wantsMouseMove
  - UnityEditor.EditorWindow.wantsMouseEnterLeaveWindow
  - UnityEditor.EditorWindow.wantsLessLayoutEvents
  - UnityEditor.EditorWindow.autoRepaintOnSceneChange
  - UnityEditor.EditorWindow.maximized
  - UnityEditor.EditorWindow.hasFocus
  - UnityEditor.EditorWindow.docked
  - UnityEditor.EditorWindow.focusedWindow
  - UnityEditor.EditorWindow.mouseOverWindow
  - UnityEditor.EditorWindow.hasUnsavedChanges
  - UnityEditor.EditorWindow.saveChangesMessage
  - UnityEditor.EditorWindow.minSize
  - UnityEditor.EditorWindow.maxSize
  - UnityEditor.EditorWindow.title
  - UnityEditor.EditorWindow.titleContent
  - UnityEditor.EditorWindow.depthBufferBits
  - UnityEditor.EditorWindow.antiAlias
  - UnityEditor.EditorWindow.position
references:
- uid: RocketshiftStudio.Editor.Trophy
  commentId: N:RocketshiftStudio.Editor.Trophy
  href: RocketshiftStudio.html
  name: RocketshiftStudio.Editor.Trophy
  nameWithType: RocketshiftStudio.Editor.Trophy
  fullName: RocketshiftStudio.Editor.Trophy
  spec.csharp:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Editor
    name: Editor
    href: RocketshiftStudio.Editor.html
  - name: .
  - uid: RocketshiftStudio.Editor.Trophy
    name: Trophy
    href: RocketshiftStudio.Editor.Trophy.html
  spec.vb:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Editor
    name: Editor
    href: RocketshiftStudio.Editor.html
  - name: .
  - uid: RocketshiftStudio.Editor.Trophy
    name: Trophy
    href: RocketshiftStudio.Editor.Trophy.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: UnityEditor.EditorWindow
  commentId: T:UnityEditor.EditorWindow
  parent: UnityEditor
  isExternal: true
  name: EditorWindow
  nameWithType: EditorWindow
  fullName: UnityEditor.EditorWindow
- uid: UnityEditor.EditorWindow.BeginWindows
  commentId: M:UnityEditor.EditorWindow.BeginWindows
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: BeginWindows()
  nameWithType: EditorWindow.BeginWindows()
  fullName: UnityEditor.EditorWindow.BeginWindows()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.BeginWindows
    name: BeginWindows
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.BeginWindows
    name: BeginWindows
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.EndWindows
  commentId: M:UnityEditor.EditorWindow.EndWindows
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: EndWindows()
  nameWithType: EditorWindow.EndWindows()
  fullName: UnityEditor.EditorWindow.EndWindows()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.EndWindows
    name: EndWindows
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.EndWindows
    name: EndWindows
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent)
  commentId: M:UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: ShowNotification(GUIContent)
  nameWithType: EditorWindow.ShowNotification(GUIContent)
  fullName: UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent)
    name: ShowNotification
    isExternal: true
  - name: (
  - uid: UnityEngine.GUIContent
    name: GUIContent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent)
    name: ShowNotification
    isExternal: true
  - name: (
  - uid: UnityEngine.GUIContent
    name: GUIContent
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent,System.Double)
  commentId: M:UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent,System.Double)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: ShowNotification(GUIContent, double)
  nameWithType: EditorWindow.ShowNotification(GUIContent, double)
  fullName: UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent, double)
  nameWithType.vb: EditorWindow.ShowNotification(GUIContent, Double)
  fullName.vb: UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent, Double)
  name.vb: ShowNotification(GUIContent, Double)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent,System.Double)
    name: ShowNotification
    isExternal: true
  - name: (
  - uid: UnityEngine.GUIContent
    name: GUIContent
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent,System.Double)
    name: ShowNotification
    isExternal: true
  - name: (
  - uid: UnityEngine.GUIContent
    name: GUIContent
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.RemoveNotification
  commentId: M:UnityEditor.EditorWindow.RemoveNotification
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: RemoveNotification()
  nameWithType: EditorWindow.RemoveNotification()
  fullName: UnityEditor.EditorWindow.RemoveNotification()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.RemoveNotification
    name: RemoveNotification
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.RemoveNotification
    name: RemoveNotification
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.ShowTab
  commentId: M:UnityEditor.EditorWindow.ShowTab
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: ShowTab()
  nameWithType: EditorWindow.ShowTab()
  fullName: UnityEditor.EditorWindow.ShowTab()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.ShowTab
    name: ShowTab
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.ShowTab
    name: ShowTab
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.Focus
  commentId: M:UnityEditor.EditorWindow.Focus
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: Focus()
  nameWithType: EditorWindow.Focus()
  fullName: UnityEditor.EditorWindow.Focus()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.Focus
    name: Focus
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.Focus
    name: Focus
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.ShowUtility
  commentId: M:UnityEditor.EditorWindow.ShowUtility
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: ShowUtility()
  nameWithType: EditorWindow.ShowUtility()
  fullName: UnityEditor.EditorWindow.ShowUtility()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.ShowUtility
    name: ShowUtility
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.ShowUtility
    name: ShowUtility
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.ShowPopup
  commentId: M:UnityEditor.EditorWindow.ShowPopup
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: ShowPopup()
  nameWithType: EditorWindow.ShowPopup()
  fullName: UnityEditor.EditorWindow.ShowPopup()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.ShowPopup
    name: ShowPopup
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.ShowPopup
    name: ShowPopup
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.ShowModalUtility
  commentId: M:UnityEditor.EditorWindow.ShowModalUtility
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: ShowModalUtility()
  nameWithType: EditorWindow.ShowModalUtility()
  fullName: UnityEditor.EditorWindow.ShowModalUtility()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.ShowModalUtility
    name: ShowModalUtility
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.ShowModalUtility
    name: ShowModalUtility
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect,UnityEngine.Vector2)
  commentId: M:UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect,UnityEngine.Vector2)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: ShowAsDropDown(Rect, Vector2)
  nameWithType: EditorWindow.ShowAsDropDown(Rect, Vector2)
  fullName: UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect, UnityEngine.Vector2)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect,UnityEngine.Vector2)
    name: ShowAsDropDown
    isExternal: true
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect,UnityEngine.Vector2)
    name: ShowAsDropDown
    isExternal: true
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.Show
  commentId: M:UnityEditor.EditorWindow.Show
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: Show()
  nameWithType: EditorWindow.Show()
  fullName: UnityEditor.EditorWindow.Show()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.Show
    name: Show
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.Show
    name: Show
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.Show(System.Boolean)
  commentId: M:UnityEditor.EditorWindow.Show(System.Boolean)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: Show(bool)
  nameWithType: EditorWindow.Show(bool)
  fullName: UnityEditor.EditorWindow.Show(bool)
  nameWithType.vb: EditorWindow.Show(Boolean)
  fullName.vb: UnityEditor.EditorWindow.Show(Boolean)
  name.vb: Show(Boolean)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.Show(System.Boolean)
    name: Show
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.Show(System.Boolean)
    name: Show
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.ShowAuxWindow
  commentId: M:UnityEditor.EditorWindow.ShowAuxWindow
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: ShowAuxWindow()
  nameWithType: EditorWindow.ShowAuxWindow()
  fullName: UnityEditor.EditorWindow.ShowAuxWindow()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.ShowAuxWindow
    name: ShowAuxWindow
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.ShowAuxWindow
    name: ShowAuxWindow
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.ShowModal
  commentId: M:UnityEditor.EditorWindow.ShowModal
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: ShowModal()
  nameWithType: EditorWindow.ShowModal()
  fullName: UnityEditor.EditorWindow.ShowModal()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.ShowModal
    name: ShowModal
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.ShowModal
    name: ShowModal
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String,System.Boolean)
  commentId: M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String,System.Boolean)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindow(Type, bool, string, bool)
  nameWithType: EditorWindow.GetWindow(Type, bool, string, bool)
  fullName: UnityEditor.EditorWindow.GetWindow(System.Type, bool, string, bool)
  nameWithType.vb: EditorWindow.GetWindow(Type, Boolean, String, Boolean)
  fullName.vb: UnityEditor.EditorWindow.GetWindow(System.Type, Boolean, String, Boolean)
  name.vb: GetWindow(Type, Boolean, String, Boolean)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String,System.Boolean)
    name: GetWindow
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String,System.Boolean)
    name: GetWindow
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String)
  commentId: M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindow(Type, bool, string)
  nameWithType: EditorWindow.GetWindow(Type, bool, string)
  fullName: UnityEditor.EditorWindow.GetWindow(System.Type, bool, string)
  nameWithType.vb: EditorWindow.GetWindow(Type, Boolean, String)
  fullName.vb: UnityEditor.EditorWindow.GetWindow(System.Type, Boolean, String)
  name.vb: GetWindow(Type, Boolean, String)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String)
    name: GetWindow
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String)
    name: GetWindow
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean)
  commentId: M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindow(Type, bool)
  nameWithType: EditorWindow.GetWindow(Type, bool)
  fullName: UnityEditor.EditorWindow.GetWindow(System.Type, bool)
  nameWithType.vb: EditorWindow.GetWindow(Type, Boolean)
  fullName.vb: UnityEditor.EditorWindow.GetWindow(System.Type, Boolean)
  name.vb: GetWindow(Type, Boolean)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean)
    name: GetWindow
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean)
    name: GetWindow
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindow(System.Type)
  commentId: M:UnityEditor.EditorWindow.GetWindow(System.Type)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindow(Type)
  nameWithType: EditorWindow.GetWindow(Type)
  fullName: UnityEditor.EditorWindow.GetWindow(System.Type)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindow(System.Type)
    name: GetWindow
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindow(System.Type)
    name: GetWindow
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean,System.String)
  commentId: M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean,System.String)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindowWithRect(Type, Rect, bool, string)
  nameWithType: EditorWindow.GetWindowWithRect(Type, Rect, bool, string)
  fullName: UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect, bool, string)
  nameWithType.vb: EditorWindow.GetWindowWithRect(Type, Rect, Boolean, String)
  fullName.vb: UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect, Boolean, String)
  name.vb: GetWindowWithRect(Type, Rect, Boolean, String)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean,System.String)
    name: GetWindowWithRect
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean,System.String)
    name: GetWindowWithRect
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean)
  commentId: M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindowWithRect(Type, Rect, bool)
  nameWithType: EditorWindow.GetWindowWithRect(Type, Rect, bool)
  fullName: UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect, bool)
  nameWithType.vb: EditorWindow.GetWindowWithRect(Type, Rect, Boolean)
  fullName.vb: UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect, Boolean)
  name.vb: GetWindowWithRect(Type, Rect, Boolean)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean)
    name: GetWindowWithRect
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean)
    name: GetWindowWithRect
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect)
  commentId: M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindowWithRect(Type, Rect)
  nameWithType: EditorWindow.GetWindowWithRect(Type, Rect)
  fullName: UnityEditor.EditorWindow.GetWindowWithRect(System.Type, UnityEngine.Rect)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect)
    name: GetWindowWithRect
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect)
    name: GetWindowWithRect
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindow``1
  commentId: M:UnityEditor.EditorWindow.GetWindow``1
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindow<T>()
  nameWithType: EditorWindow.GetWindow<T>()
  fullName: UnityEditor.EditorWindow.GetWindow<T>()
  nameWithType.vb: EditorWindow.GetWindow(Of T)()
  fullName.vb: UnityEditor.EditorWindow.GetWindow(Of T)()
  name.vb: GetWindow(Of T)()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindow``1
    name: GetWindow
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindow``1
    name: GetWindow
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.GetWindow``1(System.Boolean)
  commentId: M:UnityEditor.EditorWindow.GetWindow``1(System.Boolean)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindow<T>(bool)
  nameWithType: EditorWindow.GetWindow<T>(bool)
  fullName: UnityEditor.EditorWindow.GetWindow<T>(bool)
  nameWithType.vb: EditorWindow.GetWindow(Of T)(Boolean)
  fullName.vb: UnityEditor.EditorWindow.GetWindow(Of T)(Boolean)
  name.vb: GetWindow(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.Boolean)
    name: GetWindow
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.Boolean)
    name: GetWindow
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindow``1(System.Boolean,System.String)
  commentId: M:UnityEditor.EditorWindow.GetWindow``1(System.Boolean,System.String)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindow<T>(bool, string)
  nameWithType: EditorWindow.GetWindow<T>(bool, string)
  fullName: UnityEditor.EditorWindow.GetWindow<T>(bool, string)
  nameWithType.vb: EditorWindow.GetWindow(Of T)(Boolean, String)
  fullName.vb: UnityEditor.EditorWindow.GetWindow(Of T)(Boolean, String)
  name.vb: GetWindow(Of T)(Boolean, String)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.Boolean,System.String)
    name: GetWindow
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.Boolean,System.String)
    name: GetWindow
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindow``1(System.String)
  commentId: M:UnityEditor.EditorWindow.GetWindow``1(System.String)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindow<T>(string)
  nameWithType: EditorWindow.GetWindow<T>(string)
  fullName: UnityEditor.EditorWindow.GetWindow<T>(string)
  nameWithType.vb: EditorWindow.GetWindow(Of T)(String)
  fullName.vb: UnityEditor.EditorWindow.GetWindow(Of T)(String)
  name.vb: GetWindow(Of T)(String)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.String)
    name: GetWindow
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.String)
    name: GetWindow
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindow``1(System.String,System.Boolean)
  commentId: M:UnityEditor.EditorWindow.GetWindow``1(System.String,System.Boolean)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindow<T>(string, bool)
  nameWithType: EditorWindow.GetWindow<T>(string, bool)
  fullName: UnityEditor.EditorWindow.GetWindow<T>(string, bool)
  nameWithType.vb: EditorWindow.GetWindow(Of T)(String, Boolean)
  fullName.vb: UnityEditor.EditorWindow.GetWindow(Of T)(String, Boolean)
  name.vb: GetWindow(Of T)(String, Boolean)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.String,System.Boolean)
    name: GetWindow
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.String,System.Boolean)
    name: GetWindow
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindow``1(System.Boolean,System.String,System.Boolean)
  commentId: M:UnityEditor.EditorWindow.GetWindow``1(System.Boolean,System.String,System.Boolean)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindow<T>(bool, string, bool)
  nameWithType: EditorWindow.GetWindow<T>(bool, string, bool)
  fullName: UnityEditor.EditorWindow.GetWindow<T>(bool, string, bool)
  nameWithType.vb: EditorWindow.GetWindow(Of T)(Boolean, String, Boolean)
  fullName.vb: UnityEditor.EditorWindow.GetWindow(Of T)(Boolean, String, Boolean)
  name.vb: GetWindow(Of T)(Boolean, String, Boolean)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.Boolean,System.String,System.Boolean)
    name: GetWindow
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.Boolean,System.String,System.Boolean)
    name: GetWindow
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindow``1(System.Type[])
  commentId: M:UnityEditor.EditorWindow.GetWindow``1(System.Type[])
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindow<T>(params Type[])
  nameWithType: EditorWindow.GetWindow<T>(params Type[])
  fullName: UnityEditor.EditorWindow.GetWindow<T>(params System.Type[])
  nameWithType.vb: EditorWindow.GetWindow(Of T)(ParamArray Type())
  fullName.vb: UnityEditor.EditorWindow.GetWindow(Of T)(ParamArray System.Type())
  name.vb: GetWindow(Of T)(ParamArray Type())
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.Type[])
    name: GetWindow
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: params
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.Type[])
    name: GetWindow
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: UnityEditor.EditorWindow.GetWindow``1(System.String,System.Type[])
  commentId: M:UnityEditor.EditorWindow.GetWindow``1(System.String,System.Type[])
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindow<T>(string, params Type[])
  nameWithType: EditorWindow.GetWindow<T>(string, params Type[])
  fullName: UnityEditor.EditorWindow.GetWindow<T>(string, params System.Type[])
  nameWithType.vb: EditorWindow.GetWindow(Of T)(String, ParamArray Type())
  fullName.vb: UnityEditor.EditorWindow.GetWindow(Of T)(String, ParamArray System.Type())
  name.vb: GetWindow(Of T)(String, ParamArray Type())
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.String,System.Type[])
    name: GetWindow
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.String,System.Type[])
    name: GetWindow
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: UnityEditor.EditorWindow.GetWindow``1(System.String,System.Boolean,System.Type[])
  commentId: M:UnityEditor.EditorWindow.GetWindow``1(System.String,System.Boolean,System.Type[])
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindow<T>(string, bool, params Type[])
  nameWithType: EditorWindow.GetWindow<T>(string, bool, params Type[])
  fullName: UnityEditor.EditorWindow.GetWindow<T>(string, bool, params System.Type[])
  nameWithType.vb: EditorWindow.GetWindow(Of T)(String, Boolean, ParamArray Type())
  fullName.vb: UnityEditor.EditorWindow.GetWindow(Of T)(String, Boolean, ParamArray System.Type())
  name.vb: GetWindow(Of T)(String, Boolean, ParamArray Type())
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.String,System.Boolean,System.Type[])
    name: GetWindow
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindow``1(System.String,System.Boolean,System.Type[])
    name: GetWindow
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: UnityEditor.EditorWindow.CreateWindow``1(System.Type[])
  commentId: M:UnityEditor.EditorWindow.CreateWindow``1(System.Type[])
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: CreateWindow<T>(params Type[])
  nameWithType: EditorWindow.CreateWindow<T>(params Type[])
  fullName: UnityEditor.EditorWindow.CreateWindow<T>(params System.Type[])
  nameWithType.vb: EditorWindow.CreateWindow(Of T)(ParamArray Type())
  fullName.vb: UnityEditor.EditorWindow.CreateWindow(Of T)(ParamArray System.Type())
  name.vb: CreateWindow(Of T)(ParamArray Type())
  spec.csharp:
  - uid: UnityEditor.EditorWindow.CreateWindow``1(System.Type[])
    name: CreateWindow
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: params
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.CreateWindow``1(System.Type[])
    name: CreateWindow
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: UnityEditor.EditorWindow.CreateWindow``1(System.String,System.Type[])
  commentId: M:UnityEditor.EditorWindow.CreateWindow``1(System.String,System.Type[])
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: CreateWindow<T>(string, params Type[])
  nameWithType: EditorWindow.CreateWindow<T>(string, params Type[])
  fullName: UnityEditor.EditorWindow.CreateWindow<T>(string, params System.Type[])
  nameWithType.vb: EditorWindow.CreateWindow(Of T)(String, ParamArray Type())
  fullName.vb: UnityEditor.EditorWindow.CreateWindow(Of T)(String, ParamArray System.Type())
  name.vb: CreateWindow(Of T)(String, ParamArray Type())
  spec.csharp:
  - uid: UnityEditor.EditorWindow.CreateWindow``1(System.String,System.Type[])
    name: CreateWindow
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.CreateWindow``1(System.String,System.Type[])
    name: CreateWindow
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: UnityEditor.EditorWindow.HasOpenInstances``1
  commentId: M:UnityEditor.EditorWindow.HasOpenInstances``1
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: HasOpenInstances<T>()
  nameWithType: EditorWindow.HasOpenInstances<T>()
  fullName: UnityEditor.EditorWindow.HasOpenInstances<T>()
  nameWithType.vb: EditorWindow.HasOpenInstances(Of T)()
  fullName.vb: UnityEditor.EditorWindow.HasOpenInstances(Of T)()
  name.vb: HasOpenInstances(Of T)()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.HasOpenInstances``1
    name: HasOpenInstances
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.HasOpenInstances``1
    name: HasOpenInstances
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.FocusWindowIfItsOpen(System.Type)
  commentId: M:UnityEditor.EditorWindow.FocusWindowIfItsOpen(System.Type)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: FocusWindowIfItsOpen(Type)
  nameWithType: EditorWindow.FocusWindowIfItsOpen(Type)
  fullName: UnityEditor.EditorWindow.FocusWindowIfItsOpen(System.Type)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.FocusWindowIfItsOpen(System.Type)
    name: FocusWindowIfItsOpen
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.FocusWindowIfItsOpen(System.Type)
    name: FocusWindowIfItsOpen
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.FocusWindowIfItsOpen``1
  commentId: M:UnityEditor.EditorWindow.FocusWindowIfItsOpen``1
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: FocusWindowIfItsOpen<T>()
  nameWithType: EditorWindow.FocusWindowIfItsOpen<T>()
  fullName: UnityEditor.EditorWindow.FocusWindowIfItsOpen<T>()
  nameWithType.vb: EditorWindow.FocusWindowIfItsOpen(Of T)()
  fullName.vb: UnityEditor.EditorWindow.FocusWindowIfItsOpen(Of T)()
  name.vb: FocusWindowIfItsOpen(Of T)()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.FocusWindowIfItsOpen``1
    name: FocusWindowIfItsOpen
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.FocusWindowIfItsOpen``1
    name: FocusWindowIfItsOpen
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect)
  commentId: M:UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindowWithRect<T>(Rect)
  nameWithType: EditorWindow.GetWindowWithRect<T>(Rect)
  fullName: UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect)
  nameWithType.vb: EditorWindow.GetWindowWithRect(Of T)(Rect)
  fullName.vb: UnityEditor.EditorWindow.GetWindowWithRect(Of T)(UnityEngine.Rect)
  name.vb: GetWindowWithRect(Of T)(Rect)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect)
    name: GetWindowWithRect
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect)
    name: GetWindowWithRect
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean)
  commentId: M:UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindowWithRect<T>(Rect, bool)
  nameWithType: EditorWindow.GetWindowWithRect<T>(Rect, bool)
  fullName: UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect, bool)
  nameWithType.vb: EditorWindow.GetWindowWithRect(Of T)(Rect, Boolean)
  fullName.vb: UnityEditor.EditorWindow.GetWindowWithRect(Of T)(UnityEngine.Rect, Boolean)
  name.vb: GetWindowWithRect(Of T)(Rect, Boolean)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean)
    name: GetWindowWithRect
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean)
    name: GetWindowWithRect
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean,System.String)
  commentId: M:UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean,System.String)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindowWithRect<T>(Rect, bool, string)
  nameWithType: EditorWindow.GetWindowWithRect<T>(Rect, bool, string)
  fullName: UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect, bool, string)
  nameWithType.vb: EditorWindow.GetWindowWithRect(Of T)(Rect, Boolean, String)
  fullName.vb: UnityEditor.EditorWindow.GetWindowWithRect(Of T)(UnityEngine.Rect, Boolean, String)
  name.vb: GetWindowWithRect(Of T)(Rect, Boolean, String)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean,System.String)
    name: GetWindowWithRect
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean,System.String)
    name: GetWindowWithRect
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean,System.String,System.Boolean)
  commentId: M:UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean,System.String,System.Boolean)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetWindowWithRect<T>(Rect, bool, string, bool)
  nameWithType: EditorWindow.GetWindowWithRect<T>(Rect, bool, string, bool)
  fullName: UnityEditor.EditorWindow.GetWindowWithRect<T>(UnityEngine.Rect, bool, string, bool)
  nameWithType.vb: EditorWindow.GetWindowWithRect(Of T)(Rect, Boolean, String, Boolean)
  fullName.vb: UnityEditor.EditorWindow.GetWindowWithRect(Of T)(UnityEngine.Rect, Boolean, String, Boolean)
  name.vb: GetWindowWithRect(Of T)(Rect, Boolean, String, Boolean)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean,System.String,System.Boolean)
    name: GetWindowWithRect
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetWindowWithRect``1(UnityEngine.Rect,System.Boolean,System.String,System.Boolean)
    name: GetWindowWithRect
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.SaveChanges
  commentId: M:UnityEditor.EditorWindow.SaveChanges
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: SaveChanges()
  nameWithType: EditorWindow.SaveChanges()
  fullName: UnityEditor.EditorWindow.SaveChanges()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.SaveChanges
    name: SaveChanges
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.SaveChanges
    name: SaveChanges
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.DiscardChanges
  commentId: M:UnityEditor.EditorWindow.DiscardChanges
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: DiscardChanges()
  nameWithType: EditorWindow.DiscardChanges()
  fullName: UnityEditor.EditorWindow.DiscardChanges()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.DiscardChanges
    name: DiscardChanges
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.DiscardChanges
    name: DiscardChanges
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.Close
  commentId: M:UnityEditor.EditorWindow.Close
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: Close()
  nameWithType: EditorWindow.Close()
  fullName: UnityEditor.EditorWindow.Close()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.Close
    name: Close
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.Close
    name: Close
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.Repaint
  commentId: M:UnityEditor.EditorWindow.Repaint
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: Repaint()
  nameWithType: EditorWindow.Repaint()
  fullName: UnityEditor.EditorWindow.Repaint()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.Repaint
    name: Repaint
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.Repaint
    name: Repaint
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.SendEvent(UnityEngine.Event)
  commentId: M:UnityEditor.EditorWindow.SendEvent(UnityEngine.Event)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: SendEvent(Event)
  nameWithType: EditorWindow.SendEvent(Event)
  fullName: UnityEditor.EditorWindow.SendEvent(UnityEngine.Event)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.SendEvent(UnityEngine.Event)
    name: SendEvent
    isExternal: true
  - name: (
  - uid: UnityEngine.Event
    name: Event
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.SendEvent(UnityEngine.Event)
    name: SendEvent
    isExternal: true
  - name: (
  - uid: UnityEngine.Event
    name: Event
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.GetExtraPaneTypes
  commentId: M:UnityEditor.EditorWindow.GetExtraPaneTypes
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: GetExtraPaneTypes()
  nameWithType: EditorWindow.GetExtraPaneTypes()
  fullName: UnityEditor.EditorWindow.GetExtraPaneTypes()
  spec.csharp:
  - uid: UnityEditor.EditorWindow.GetExtraPaneTypes
    name: GetExtraPaneTypes
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.GetExtraPaneTypes
    name: GetExtraPaneTypes
    isExternal: true
  - name: (
  - name: )
- uid: UnityEditor.EditorWindow.TryGetOverlay(System.String,UnityEditor.Overlays.Overlay@)
  commentId: M:UnityEditor.EditorWindow.TryGetOverlay(System.String,UnityEditor.Overlays.Overlay@)
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: TryGetOverlay(string, out Overlay)
  nameWithType: EditorWindow.TryGetOverlay(string, out Overlay)
  fullName: UnityEditor.EditorWindow.TryGetOverlay(string, out UnityEditor.Overlays.Overlay)
  nameWithType.vb: EditorWindow.TryGetOverlay(String, Overlay)
  fullName.vb: UnityEditor.EditorWindow.TryGetOverlay(String, UnityEditor.Overlays.Overlay)
  name.vb: TryGetOverlay(String, Overlay)
  spec.csharp:
  - uid: UnityEditor.EditorWindow.TryGetOverlay(System.String,UnityEditor.Overlays.Overlay@)
    name: TryGetOverlay
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: UnityEditor.Overlays.Overlay
    name: Overlay
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEditor.EditorWindow.TryGetOverlay(System.String,UnityEditor.Overlays.Overlay@)
    name: TryGetOverlay
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEditor.Overlays.Overlay
    name: Overlay
    isExternal: true
  - name: )
- uid: UnityEditor.EditorWindow.dataModeController
  commentId: P:UnityEditor.EditorWindow.dataModeController
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: dataModeController
  nameWithType: EditorWindow.dataModeController
  fullName: UnityEditor.EditorWindow.dataModeController
- uid: UnityEditor.EditorWindow.rootVisualElement
  commentId: P:UnityEditor.EditorWindow.rootVisualElement
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: rootVisualElement
  nameWithType: EditorWindow.rootVisualElement
  fullName: UnityEditor.EditorWindow.rootVisualElement
- uid: UnityEditor.EditorWindow.overlayCanvas
  commentId: P:UnityEditor.EditorWindow.overlayCanvas
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: overlayCanvas
  nameWithType: EditorWindow.overlayCanvas
  fullName: UnityEditor.EditorWindow.overlayCanvas
- uid: UnityEditor.EditorWindow.wantsMouseMove
  commentId: P:UnityEditor.EditorWindow.wantsMouseMove
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: wantsMouseMove
  nameWithType: EditorWindow.wantsMouseMove
  fullName: UnityEditor.EditorWindow.wantsMouseMove
- uid: UnityEditor.EditorWindow.wantsMouseEnterLeaveWindow
  commentId: P:UnityEditor.EditorWindow.wantsMouseEnterLeaveWindow
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: wantsMouseEnterLeaveWindow
  nameWithType: EditorWindow.wantsMouseEnterLeaveWindow
  fullName: UnityEditor.EditorWindow.wantsMouseEnterLeaveWindow
- uid: UnityEditor.EditorWindow.wantsLessLayoutEvents
  commentId: P:UnityEditor.EditorWindow.wantsLessLayoutEvents
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: wantsLessLayoutEvents
  nameWithType: EditorWindow.wantsLessLayoutEvents
  fullName: UnityEditor.EditorWindow.wantsLessLayoutEvents
- uid: UnityEditor.EditorWindow.autoRepaintOnSceneChange
  commentId: P:UnityEditor.EditorWindow.autoRepaintOnSceneChange
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: autoRepaintOnSceneChange
  nameWithType: EditorWindow.autoRepaintOnSceneChange
  fullName: UnityEditor.EditorWindow.autoRepaintOnSceneChange
- uid: UnityEditor.EditorWindow.maximized
  commentId: P:UnityEditor.EditorWindow.maximized
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: maximized
  nameWithType: EditorWindow.maximized
  fullName: UnityEditor.EditorWindow.maximized
- uid: UnityEditor.EditorWindow.hasFocus
  commentId: P:UnityEditor.EditorWindow.hasFocus
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: hasFocus
  nameWithType: EditorWindow.hasFocus
  fullName: UnityEditor.EditorWindow.hasFocus
- uid: UnityEditor.EditorWindow.docked
  commentId: P:UnityEditor.EditorWindow.docked
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: docked
  nameWithType: EditorWindow.docked
  fullName: UnityEditor.EditorWindow.docked
- uid: UnityEditor.EditorWindow.focusedWindow
  commentId: P:UnityEditor.EditorWindow.focusedWindow
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: focusedWindow
  nameWithType: EditorWindow.focusedWindow
  fullName: UnityEditor.EditorWindow.focusedWindow
- uid: UnityEditor.EditorWindow.mouseOverWindow
  commentId: P:UnityEditor.EditorWindow.mouseOverWindow
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: mouseOverWindow
  nameWithType: EditorWindow.mouseOverWindow
  fullName: UnityEditor.EditorWindow.mouseOverWindow
- uid: UnityEditor.EditorWindow.hasUnsavedChanges
  commentId: P:UnityEditor.EditorWindow.hasUnsavedChanges
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: hasUnsavedChanges
  nameWithType: EditorWindow.hasUnsavedChanges
  fullName: UnityEditor.EditorWindow.hasUnsavedChanges
- uid: UnityEditor.EditorWindow.saveChangesMessage
  commentId: P:UnityEditor.EditorWindow.saveChangesMessage
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: saveChangesMessage
  nameWithType: EditorWindow.saveChangesMessage
  fullName: UnityEditor.EditorWindow.saveChangesMessage
- uid: UnityEditor.EditorWindow.minSize
  commentId: P:UnityEditor.EditorWindow.minSize
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: minSize
  nameWithType: EditorWindow.minSize
  fullName: UnityEditor.EditorWindow.minSize
- uid: UnityEditor.EditorWindow.maxSize
  commentId: P:UnityEditor.EditorWindow.maxSize
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: maxSize
  nameWithType: EditorWindow.maxSize
  fullName: UnityEditor.EditorWindow.maxSize
- uid: UnityEditor.EditorWindow.title
  commentId: P:UnityEditor.EditorWindow.title
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: title
  nameWithType: EditorWindow.title
  fullName: UnityEditor.EditorWindow.title
- uid: UnityEditor.EditorWindow.titleContent
  commentId: P:UnityEditor.EditorWindow.titleContent
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: titleContent
  nameWithType: EditorWindow.titleContent
  fullName: UnityEditor.EditorWindow.titleContent
- uid: UnityEditor.EditorWindow.depthBufferBits
  commentId: P:UnityEditor.EditorWindow.depthBufferBits
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: depthBufferBits
  nameWithType: EditorWindow.depthBufferBits
  fullName: UnityEditor.EditorWindow.depthBufferBits
- uid: UnityEditor.EditorWindow.antiAlias
  commentId: P:UnityEditor.EditorWindow.antiAlias
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: antiAlias
  nameWithType: EditorWindow.antiAlias
  fullName: UnityEditor.EditorWindow.antiAlias
- uid: UnityEditor.EditorWindow.position
  commentId: P:UnityEditor.EditorWindow.position
  parent: UnityEditor.EditorWindow
  isExternal: true
  name: position
  nameWithType: EditorWindow.position
  fullName: UnityEditor.EditorWindow.position
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEditor
  commentId: N:UnityEditor
  isExternal: true
  name: UnityEditor
  nameWithType: UnityEditor
  fullName: UnityEditor
