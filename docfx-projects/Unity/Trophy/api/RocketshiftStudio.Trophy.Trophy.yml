### YamlMime:ManagedReference
items:
- uid: RocketshiftStudio.Trophy.Trophy
  commentId: T:RocketshiftStudio.Trophy.Trophy
  id: Trophy
  parent: RocketshiftStudio.Trophy
  children:
  - RocketshiftStudio.Trophy.Trophy.BeginCounting(System.String[])
  - RocketshiftStudio.Trophy.Trophy.ClearSavedScoreAsync(System.String[])
  - RocketshiftStudio.Trophy.Trophy.CountingChanged
  - RocketshiftStudio.Trophy.Trophy.DecreaseValue(System.String,System.Double,System.Boolean)
  - RocketshiftStudio.Trophy.Trophy.EndCounting(System.String[])
  - RocketshiftStudio.Trophy.Trophy.GetMultiplier(System.String)
  - RocketshiftStudio.Trophy.Trophy.GetStatus(System.String)
  - RocketshiftStudio.Trophy.Trophy.GetUserScoreAsync(System.String,System.String[])
  - RocketshiftStudio.Trophy.Trophy.GetValue(System.String,RocketshiftStudio.Trophy.ScoreType)
  - RocketshiftStudio.Trophy.Trophy.IncreaseValue(System.String,System.Double,System.Boolean)
  - RocketshiftStudio.Trophy.Trophy.InitializeAsync
  - RocketshiftStudio.Trophy.Trophy.Initialized
  - RocketshiftStudio.Trophy.Trophy.IsCounting(System.String)
  - RocketshiftStudio.Trophy.Trophy.IsInitialized
  - RocketshiftStudio.Trophy.Trophy.Load(System.String[])
  - RocketshiftStudio.Trophy.Trophy.LoadAsync(System.String[])
  - RocketshiftStudio.Trophy.Trophy.MultiplyValue(System.String,System.Double,System.Boolean)
  - RocketshiftStudio.Trophy.Trophy.PostToLeaderboard(RocketshiftStudio.Trophy.LeaderboardRequest[])
  - RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync(RocketshiftStudio.Trophy.LeaderboardRequest[])
  - RocketshiftStudio.Trophy.Trophy.ResetValue(System.String)
  - RocketshiftStudio.Trophy.Trophy.Save(System.String[])
  - RocketshiftStudio.Trophy.Trophy.SaveAsync(System.String[])
  - RocketshiftStudio.Trophy.Trophy.Scores
  - RocketshiftStudio.Trophy.Trophy.SetMultiplier(System.String,System.Single)
  - RocketshiftStudio.Trophy.Trophy.SetValue(System.String,System.Double,System.Boolean)
  - RocketshiftStudio.Trophy.Trophy.StatusChanged
  - RocketshiftStudio.Trophy.Trophy.TryGetValue(System.String,System.Double@,RocketshiftStudio.Trophy.ScoreType)
  - RocketshiftStudio.Trophy.Trophy.ValueChanged
  langs:
  - csharp
  - vb
  name: Trophy
  nameWithType: Trophy
  fullName: RocketshiftStudio.Trophy.Trophy
  type: Class
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: Trophy
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 14
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Handle all score based operations from this class
  example: []
  syntax:
    content: >-
      [AddComponentMenu("")]

      [ExcludeFromPreset]

      [ExcludeFromObjectFactory]

      public sealed class Trophy : SingletonMonoBehaviour<Trophy>
    content.vb: >-
      <AddComponentMenu("")>

      <ExcludeFromPreset>

      <ExcludeFromObjectFactory>

      Public NotInheritable Class Trophy Inherits SingletonMonoBehaviour(Of Trophy)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - RocketshiftStudio.Shared.SingletonMonoBehaviour{RocketshiftStudio.Trophy.Trophy}
  inheritedMembers:
  - RocketshiftStudio.Shared.SingletonMonoBehaviour{RocketshiftStudio.Trophy.Trophy}.Instance
  attributes:
  - type: UnityEngine.AddComponentMenu
    ctor: UnityEngine.AddComponentMenu.#ctor(System.String)
    arguments:
    - type: System.String
      value: ''
  - type: UnityEngine.ExcludeFromPresetAttribute
    ctor: UnityEngine.ExcludeFromPresetAttribute.#ctor
    arguments: []
  - type: UnityEngine.ExcludeFromObjectFactoryAttribute
    ctor: UnityEngine.ExcludeFromObjectFactoryAttribute.#ctor
    arguments: []
- uid: RocketshiftStudio.Trophy.Trophy.IsInitialized
  commentId: P:RocketshiftStudio.Trophy.Trophy.IsInitialized
  id: IsInitialized
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: IsInitialized
  nameWithType: Trophy.IsInitialized
  fullName: RocketshiftStudio.Trophy.Trophy.IsInitialized
  type: Property
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: IsInitialized
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 22
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Indicates the state of Trophy
  example: []
  syntax:
    content: public static bool IsInitialized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property IsInitialized As Boolean
  overload: RocketshiftStudio.Trophy.Trophy.IsInitialized*
- uid: RocketshiftStudio.Trophy.Trophy.Scores
  commentId: P:RocketshiftStudio.Trophy.Trophy.Scores
  id: Scores
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: Scores
  nameWithType: Trophy.Scores
  fullName: RocketshiftStudio.Trophy.Trophy.Scores
  type: Property
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: Scores
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 29
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: All active scores
  example: []
  syntax:
    content: public IList<Score> Scores { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{RocketshiftStudio.Trophy.Score}
    content.vb: Public Property Scores As IList(Of Score)
  overload: RocketshiftStudio.Trophy.Trophy.Scores*
- uid: RocketshiftStudio.Trophy.Trophy.Initialized
  commentId: E:RocketshiftStudio.Trophy.Trophy.Initialized
  id: Initialized
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: Initialized
  nameWithType: Trophy.Initialized
  fullName: RocketshiftStudio.Trophy.Trophy.Initialized
  type: Event
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: Initialized
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 38
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Invoked as soon as Trophy initialized
  example: []
  syntax:
    content: public static event Action Initialized
    return:
      type: System.Action
    content.vb: Public Shared Event Initialized As Action
- uid: RocketshiftStudio.Trophy.Trophy.ValueChanged
  commentId: E:RocketshiftStudio.Trophy.Trophy.ValueChanged
  id: ValueChanged
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: ValueChanged
  nameWithType: Trophy.ValueChanged
  fullName: RocketshiftStudio.Trophy.Trophy.ValueChanged
  type: Event
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: ValueChanged
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 40
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  syntax:
    content: public event Trophy.ValueChangedCallback ValueChanged
    return:
      type: RocketshiftStudio.Trophy.Trophy.ValueChangedCallback
    content.vb: Public Event ValueChanged As Trophy.ValueChangedCallback
- uid: RocketshiftStudio.Trophy.Trophy.StatusChanged
  commentId: E:RocketshiftStudio.Trophy.Trophy.StatusChanged
  id: StatusChanged
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: StatusChanged
  nameWithType: Trophy.StatusChanged
  fullName: RocketshiftStudio.Trophy.Trophy.StatusChanged
  type: Event
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: StatusChanged
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 41
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  syntax:
    content: public event Trophy.StatusChangedCallback StatusChanged
    return:
      type: RocketshiftStudio.Trophy.Trophy.StatusChangedCallback
    content.vb: Public Event StatusChanged As Trophy.StatusChangedCallback
- uid: RocketshiftStudio.Trophy.Trophy.CountingChanged
  commentId: E:RocketshiftStudio.Trophy.Trophy.CountingChanged
  id: CountingChanged
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: CountingChanged
  nameWithType: Trophy.CountingChanged
  fullName: RocketshiftStudio.Trophy.Trophy.CountingChanged
  type: Event
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: CountingChanged
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 42
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  syntax:
    content: public event Trophy.CountingChangedCallback CountingChanged
    return:
      type: RocketshiftStudio.Trophy.Trophy.CountingChangedCallback
    content.vb: Public Event CountingChanged As Trophy.CountingChangedCallback
- uid: RocketshiftStudio.Trophy.Trophy.InitializeAsync
  commentId: M:RocketshiftStudio.Trophy.Trophy.InitializeAsync
  id: InitializeAsync
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: InitializeAsync()
  nameWithType: Trophy.InitializeAsync()
  fullName: RocketshiftStudio.Trophy.Trophy.InitializeAsync()
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: InitializeAsync
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 77
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Initialize Trophy asynchronously
  example: []
  syntax:
    content: public static Task InitializeAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function InitializeAsync() As Task
  overload: RocketshiftStudio.Trophy.Trophy.InitializeAsync*
- uid: RocketshiftStudio.Trophy.Trophy.BeginCounting(System.String[])
  commentId: M:RocketshiftStudio.Trophy.Trophy.BeginCounting(System.String[])
  id: BeginCounting(System.String[])
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: BeginCounting(params string[])
  nameWithType: Trophy.BeginCounting(params string[])
  fullName: RocketshiftStudio.Trophy.Trophy.BeginCounting(params string[])
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: BeginCounting
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 143
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Set counting mode to true in scores
  example: []
  syntax:
    content: public void BeginCounting(params string[] keys)
    parameters:
    - id: keys
      type: System.String[]
      description: Target keys
    content.vb: Public Sub BeginCounting(ParamArray keys As String())
  overload: RocketshiftStudio.Trophy.Trophy.BeginCounting*
  exceptions:
  - type: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    commentId: T:RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    description: When the expected definitions are not in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref> found with given keys
  nameWithType.vb: Trophy.BeginCounting(ParamArray String())
  fullName.vb: RocketshiftStudio.Trophy.Trophy.BeginCounting(ParamArray String())
  name.vb: BeginCounting(ParamArray String())
- uid: RocketshiftStudio.Trophy.Trophy.IsCounting(System.String)
  commentId: M:RocketshiftStudio.Trophy.Trophy.IsCounting(System.String)
  id: IsCounting(System.String)
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: IsCounting(string)
  nameWithType: Trophy.IsCounting(string)
  fullName: RocketshiftStudio.Trophy.Trophy.IsCounting(string)
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: IsCounting
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 164
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: To check if a score is in count mode
  example: []
  syntax:
    content: public bool IsCounting(string key)
    parameters:
    - id: key
      type: System.String
      description: Target key
    return:
      type: System.Boolean
      description: Current count mode of score
    content.vb: Public Function IsCounting(key As String) As Boolean
  overload: RocketshiftStudio.Trophy.Trophy.IsCounting*
  exceptions:
  - type: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    commentId: T:RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    description: When the expected definitions are not in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref> found with given key
  nameWithType.vb: Trophy.IsCounting(String)
  fullName.vb: RocketshiftStudio.Trophy.Trophy.IsCounting(String)
  name.vb: IsCounting(String)
- uid: RocketshiftStudio.Trophy.Trophy.EndCounting(System.String[])
  commentId: M:RocketshiftStudio.Trophy.Trophy.EndCounting(System.String[])
  id: EndCounting(System.String[])
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: EndCounting(params string[])
  nameWithType: Trophy.EndCounting(params string[])
  fullName: RocketshiftStudio.Trophy.Trophy.EndCounting(params string[])
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: EndCounting
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 180
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Set count mode to false in scores
  example: []
  syntax:
    content: public void EndCounting(params string[] keys)
    parameters:
    - id: keys
      type: System.String[]
      description: Target keys
    content.vb: Public Sub EndCounting(ParamArray keys As String())
  overload: RocketshiftStudio.Trophy.Trophy.EndCounting*
  exceptions:
  - type: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    commentId: T:RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    description: When the expected definitions are not in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref> found with given keys
  nameWithType.vb: Trophy.EndCounting(ParamArray String())
  fullName.vb: RocketshiftStudio.Trophy.Trophy.EndCounting(ParamArray String())
  name.vb: EndCounting(ParamArray String())
- uid: RocketshiftStudio.Trophy.Trophy.IncreaseValue(System.String,System.Double,System.Boolean)
  commentId: M:RocketshiftStudio.Trophy.Trophy.IncreaseValue(System.String,System.Double,System.Boolean)
  id: IncreaseValue(System.String,System.Double,System.Boolean)
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: IncreaseValue(string, double, bool)
  nameWithType: Trophy.IncreaseValue(string, double, bool)
  fullName: RocketshiftStudio.Trophy.Trophy.IncreaseValue(string, double, bool)
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: IncreaseValue
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 211
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Increase value of score
  example: []
  syntax:
    content: public void IncreaseValue(string key, double amount, bool ignoreMultiplier = false)
    parameters:
    - id: key
      type: System.String
      description: Target key
    - id: amount
      type: System.Double
      description: Amount to add
    - id: ignoreMultiplier
      type: System.Boolean
      description: Ignore the score multiplier
    content.vb: Public Sub IncreaseValue(key As String, amount As Double, ignoreMultiplier As Boolean = False)
  overload: RocketshiftStudio.Trophy.Trophy.IncreaseValue*
  exceptions:
  - type: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    commentId: T:RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    description: When the expected definitions are not in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref> found with given key
  - type: RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
    commentId: T:RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
    description: If amount is less then or equal to 0
  nameWithType.vb: Trophy.IncreaseValue(String, Double, Boolean)
  fullName.vb: RocketshiftStudio.Trophy.Trophy.IncreaseValue(String, Double, Boolean)
  name.vb: IncreaseValue(String, Double, Boolean)
- uid: RocketshiftStudio.Trophy.Trophy.DecreaseValue(System.String,System.Double,System.Boolean)
  commentId: M:RocketshiftStudio.Trophy.Trophy.DecreaseValue(System.String,System.Double,System.Boolean)
  id: DecreaseValue(System.String,System.Double,System.Boolean)
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: DecreaseValue(string, double, bool)
  nameWithType: Trophy.DecreaseValue(string, double, bool)
  fullName: RocketshiftStudio.Trophy.Trophy.DecreaseValue(string, double, bool)
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: DecreaseValue
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 245
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Decrease value of score
  example: []
  syntax:
    content: public void DecreaseValue(string key, double amount, bool ignoreMultiplier = false)
    parameters:
    - id: key
      type: System.String
      description: Target key
    - id: amount
      type: System.Double
      description: Amount to subtract
    - id: ignoreMultiplier
      type: System.Boolean
      description: Ignore the score multiplier
    content.vb: Public Sub DecreaseValue(key As String, amount As Double, ignoreMultiplier As Boolean = False)
  overload: RocketshiftStudio.Trophy.Trophy.DecreaseValue*
  exceptions:
  - type: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    commentId: T:RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    description: When the expected definitions are not in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref> found with given key
  - type: RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
    commentId: T:RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
    description: If amount is less then or equal to 0
  nameWithType.vb: Trophy.DecreaseValue(String, Double, Boolean)
  fullName.vb: RocketshiftStudio.Trophy.Trophy.DecreaseValue(String, Double, Boolean)
  name.vb: DecreaseValue(String, Double, Boolean)
- uid: RocketshiftStudio.Trophy.Trophy.MultiplyValue(System.String,System.Double,System.Boolean)
  commentId: M:RocketshiftStudio.Trophy.Trophy.MultiplyValue(System.String,System.Double,System.Boolean)
  id: MultiplyValue(System.String,System.Double,System.Boolean)
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: MultiplyValue(string, double, bool)
  nameWithType: Trophy.MultiplyValue(string, double, bool)
  fullName: RocketshiftStudio.Trophy.Trophy.MultiplyValue(string, double, bool)
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: MultiplyValue
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 278
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Multiply value of score
  example: []
  syntax:
    content: public void MultiplyValue(string key, double amount, bool ignoreMultiplier)
    parameters:
    - id: key
      type: System.String
      description: Target key
    - id: amount
      type: System.Double
      description: Amount to multiply with
    - id: ignoreMultiplier
      type: System.Boolean
      description: Ignore the score multiplier
    content.vb: Public Sub MultiplyValue(key As String, amount As Double, ignoreMultiplier As Boolean)
  overload: RocketshiftStudio.Trophy.Trophy.MultiplyValue*
  exceptions:
  - type: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    commentId: T:RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    description: When the expected definitions are not in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref> found with given key
  - type: RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
    commentId: T:RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
    description: If amount is less then or equal to 0
  nameWithType.vb: Trophy.MultiplyValue(String, Double, Boolean)
  fullName.vb: RocketshiftStudio.Trophy.Trophy.MultiplyValue(String, Double, Boolean)
  name.vb: MultiplyValue(String, Double, Boolean)
- uid: RocketshiftStudio.Trophy.Trophy.SetValue(System.String,System.Double,System.Boolean)
  commentId: M:RocketshiftStudio.Trophy.Trophy.SetValue(System.String,System.Double,System.Boolean)
  id: SetValue(System.String,System.Double,System.Boolean)
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: SetValue(string, double, bool)
  nameWithType: Trophy.SetValue(string, double, bool)
  fullName: RocketshiftStudio.Trophy.Trophy.SetValue(string, double, bool)
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: SetValue
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 312
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Set value of score
  example: []
  syntax:
    content: public void SetValue(string key, double value, bool ignoreMultiplier = false)
    parameters:
    - id: key
      type: System.String
      description: Target key
    - id: value
      type: System.Double
      description: New value
    - id: ignoreMultiplier
      type: System.Boolean
      description: Ignore the score multiplier
    content.vb: Public Sub SetValue(key As String, value As Double, ignoreMultiplier As Boolean = False)
  overload: RocketshiftStudio.Trophy.Trophy.SetValue*
  exceptions:
  - type: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    commentId: T:RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    description: When the expected definitions are not in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref> found with given key
  - type: RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
    commentId: T:RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
    description: If amount is less then or equal to 0
  nameWithType.vb: Trophy.SetValue(String, Double, Boolean)
  fullName.vb: RocketshiftStudio.Trophy.Trophy.SetValue(String, Double, Boolean)
  name.vb: SetValue(String, Double, Boolean)
- uid: RocketshiftStudio.Trophy.Trophy.ResetValue(System.String)
  commentId: M:RocketshiftStudio.Trophy.Trophy.ResetValue(System.String)
  id: ResetValue(System.String)
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: ResetValue(string)
  nameWithType: Trophy.ResetValue(string)
  fullName: RocketshiftStudio.Trophy.Trophy.ResetValue(string)
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: ResetValue
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 338
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Reset value of score
  example: []
  syntax:
    content: public void ResetValue(string key)
    parameters:
    - id: key
      type: System.String
      description: Target key
    content.vb: Public Sub ResetValue(key As String)
  overload: RocketshiftStudio.Trophy.Trophy.ResetValue*
  exceptions:
  - type: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    commentId: T:RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    description: When the expected definitions are not in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref> found with given key
  nameWithType.vb: Trophy.ResetValue(String)
  fullName.vb: RocketshiftStudio.Trophy.Trophy.ResetValue(String)
  name.vb: ResetValue(String)
- uid: RocketshiftStudio.Trophy.Trophy.GetValue(System.String,RocketshiftStudio.Trophy.ScoreType)
  commentId: M:RocketshiftStudio.Trophy.Trophy.GetValue(System.String,RocketshiftStudio.Trophy.ScoreType)
  id: GetValue(System.String,RocketshiftStudio.Trophy.ScoreType)
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: GetValue(string, ScoreType)
  nameWithType: Trophy.GetValue(string, ScoreType)
  fullName: RocketshiftStudio.Trophy.Trophy.GetValue(string, RocketshiftStudio.Trophy.ScoreType)
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: GetValue
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 366
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Get value of score
  example: []
  syntax:
    content: public double GetValue(string key, ScoreType type = ScoreType.Current)
    parameters:
    - id: key
      type: System.String
      description: Target key
    - id: type
      type: RocketshiftStudio.Trophy.ScoreType
      description: Type of score
    return:
      type: System.Double
      description: Value from score of given key and given type
    content.vb: Public Function GetValue(key As String, type As ScoreType = ScoreType.Current) As Double
  overload: RocketshiftStudio.Trophy.Trophy.GetValue*
  exceptions:
  - type: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    commentId: T:RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    description: When the expected definitions are not in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref> found with given key
  nameWithType.vb: Trophy.GetValue(String, ScoreType)
  fullName.vb: RocketshiftStudio.Trophy.Trophy.GetValue(String, RocketshiftStudio.Trophy.ScoreType)
  name.vb: GetValue(String, ScoreType)
- uid: RocketshiftStudio.Trophy.Trophy.TryGetValue(System.String,System.Double@,RocketshiftStudio.Trophy.ScoreType)
  commentId: M:RocketshiftStudio.Trophy.Trophy.TryGetValue(System.String,System.Double@,RocketshiftStudio.Trophy.ScoreType)
  id: TryGetValue(System.String,System.Double@,RocketshiftStudio.Trophy.ScoreType)
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: TryGetValue(string, out double, ScoreType)
  nameWithType: Trophy.TryGetValue(string, out double, ScoreType)
  fullName: RocketshiftStudio.Trophy.Trophy.TryGetValue(string, out double, RocketshiftStudio.Trophy.ScoreType)
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: TryGetValue
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 390
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Try get value of score
  example: []
  syntax:
    content: public bool TryGetValue(string key, out double value, ScoreType type = ScoreType.Current)
    parameters:
    - id: key
      type: System.String
      description: Target key
    - id: value
      type: System.Double
      description: Value from score of given key and given type
    - id: type
      type: RocketshiftStudio.Trophy.ScoreType
      description: Type of score
    return:
      type: System.Boolean
      description: True if score value found otherwise false
    content.vb: Public Function TryGetValue(key As String, value As Double, type As ScoreType = ScoreType.Current) As Boolean
  overload: RocketshiftStudio.Trophy.Trophy.TryGetValue*
  nameWithType.vb: Trophy.TryGetValue(String, Double, ScoreType)
  fullName.vb: RocketshiftStudio.Trophy.Trophy.TryGetValue(String, Double, RocketshiftStudio.Trophy.ScoreType)
  name.vb: TryGetValue(String, Double, ScoreType)
- uid: RocketshiftStudio.Trophy.Trophy.SetMultiplier(System.String,System.Single)
  commentId: M:RocketshiftStudio.Trophy.Trophy.SetMultiplier(System.String,System.Single)
  id: SetMultiplier(System.String,System.Single)
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: SetMultiplier(string, float)
  nameWithType: Trophy.SetMultiplier(string, float)
  fullName: RocketshiftStudio.Trophy.Trophy.SetMultiplier(string, float)
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: SetMultiplier
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 415
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Set multiplier of a score
  example: []
  syntax:
    content: public void SetMultiplier(string key, float amount)
    parameters:
    - id: key
      type: System.String
      description: Target key
    - id: amount
      type: System.Single
      description: Multiplier amount
    content.vb: Public Sub SetMultiplier(key As String, amount As Single)
  overload: RocketshiftStudio.Trophy.Trophy.SetMultiplier*
  exceptions:
  - type: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    commentId: T:RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    description: When the expected definitions are not in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref> found with given key
  - type: RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
    commentId: T:RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
    description: If amount is less then 0 and Not positive finite
  nameWithType.vb: Trophy.SetMultiplier(String, Single)
  fullName.vb: RocketshiftStudio.Trophy.Trophy.SetMultiplier(String, Single)
  name.vb: SetMultiplier(String, Single)
- uid: RocketshiftStudio.Trophy.Trophy.GetMultiplier(System.String)
  commentId: M:RocketshiftStudio.Trophy.Trophy.GetMultiplier(System.String)
  id: GetMultiplier(System.String)
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: GetMultiplier(string)
  nameWithType: Trophy.GetMultiplier(string)
  fullName: RocketshiftStudio.Trophy.Trophy.GetMultiplier(string)
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: GetMultiplier
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 436
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Get multiplier of a score
  example: []
  syntax:
    content: public float GetMultiplier(string key)
    parameters:
    - id: key
      type: System.String
      description: Target key
    return:
      type: System.Single
      description: Current multiplier value
    content.vb: Public Function GetMultiplier(key As String) As Single
  overload: RocketshiftStudio.Trophy.Trophy.GetMultiplier*
  exceptions:
  - type: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    commentId: T:RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    description: When the expected definitions are not in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref> found with given key
  nameWithType.vb: Trophy.GetMultiplier(String)
  fullName.vb: RocketshiftStudio.Trophy.Trophy.GetMultiplier(String)
  name.vb: GetMultiplier(String)
- uid: RocketshiftStudio.Trophy.Trophy.GetStatus(System.String)
  commentId: M:RocketshiftStudio.Trophy.Trophy.GetStatus(System.String)
  id: GetStatus(System.String)
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: GetStatus(string)
  nameWithType: Trophy.GetStatus(string)
  fullName: RocketshiftStudio.Trophy.Trophy.GetStatus(string)
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: GetStatus
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 454
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Get status of a score
  example: []
  syntax:
    content: public ScoreStatusFlags GetStatus(string key)
    parameters:
    - id: key
      type: System.String
      description: Target key
    return:
      type: RocketshiftStudio.Trophy.ScoreStatusFlags
      description: The status of score
    content.vb: Public Function GetStatus(key As String) As ScoreStatusFlags
  overload: RocketshiftStudio.Trophy.Trophy.GetStatus*
  exceptions:
  - type: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    commentId: T:RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    description: When the expected definitions are not in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref> found with given key
  nameWithType.vb: Trophy.GetStatus(String)
  fullName.vb: RocketshiftStudio.Trophy.Trophy.GetStatus(String)
  name.vb: GetStatus(String)
- uid: RocketshiftStudio.Trophy.Trophy.PostToLeaderboard(RocketshiftStudio.Trophy.LeaderboardRequest[])
  commentId: M:RocketshiftStudio.Trophy.Trophy.PostToLeaderboard(RocketshiftStudio.Trophy.LeaderboardRequest[])
  id: PostToLeaderboard(RocketshiftStudio.Trophy.LeaderboardRequest[])
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: PostToLeaderboard(params LeaderboardRequest[])
  nameWithType: Trophy.PostToLeaderboard(params LeaderboardRequest[])
  fullName: RocketshiftStudio.Trophy.Trophy.PostToLeaderboard(params RocketshiftStudio.Trophy.LeaderboardRequest[])
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: PostToLeaderboard
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 469
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Post values to leaderboard according to leaderboard definition with respective keys using extension defined in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void PostToLeaderboard(params LeaderboardRequest[] requests)
    parameters:
    - id: requests
      type: RocketshiftStudio.Trophy.LeaderboardRequest[]
      description: Collection of <xref href="RocketshiftStudio.Trophy.LeaderboardRequest" data-throw-if-not-resolved="false"></xref> that will be used to post in leaderboard
    content.vb: Public Sub PostToLeaderboard(ParamArray requests As LeaderboardRequest())
  overload: RocketshiftStudio.Trophy.Trophy.PostToLeaderboard*
  nameWithType.vb: Trophy.PostToLeaderboard(ParamArray LeaderboardRequest())
  fullName.vb: RocketshiftStudio.Trophy.Trophy.PostToLeaderboard(ParamArray RocketshiftStudio.Trophy.LeaderboardRequest())
  name.vb: PostToLeaderboard(ParamArray LeaderboardRequest())
- uid: RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync(RocketshiftStudio.Trophy.LeaderboardRequest[])
  commentId: M:RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync(RocketshiftStudio.Trophy.LeaderboardRequest[])
  id: PostToLeaderboardAsync(RocketshiftStudio.Trophy.LeaderboardRequest[])
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: PostToLeaderboardAsync(params LeaderboardRequest[])
  nameWithType: Trophy.PostToLeaderboardAsync(params LeaderboardRequest[])
  fullName: RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync(params RocketshiftStudio.Trophy.LeaderboardRequest[])
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: PostToLeaderboardAsync
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 478
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Post values to leaderboard asynchronously according to leaderboard definition with respective keys using extension defined in <xref href="RocketshiftStudio.Trophy.TrophySettings" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Task PostToLeaderboardAsync(params LeaderboardRequest[] requests)
    parameters:
    - id: requests
      type: RocketshiftStudio.Trophy.LeaderboardRequest[]
      description: Collection of <xref href="RocketshiftStudio.Trophy.LeaderboardRequest" data-throw-if-not-resolved="false"></xref> that will be used to post in leaderboard
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function PostToLeaderboardAsync(ParamArray requests As LeaderboardRequest()) As Task
  overload: RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync*
  nameWithType.vb: Trophy.PostToLeaderboardAsync(ParamArray LeaderboardRequest())
  fullName.vb: RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync(ParamArray RocketshiftStudio.Trophy.LeaderboardRequest())
  name.vb: PostToLeaderboardAsync(ParamArray LeaderboardRequest())
- uid: RocketshiftStudio.Trophy.Trophy.Load(System.String[])
  commentId: M:RocketshiftStudio.Trophy.Trophy.Load(System.String[])
  id: Load(System.String[])
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: Load(string[])
  nameWithType: Trophy.Load(string[])
  fullName: RocketshiftStudio.Trophy.Trophy.Load(string[])
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: Load
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 561
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Load saved values from storage according to storage flags defined in the <xref href="RocketshiftStudio.Trophy.ScoreDefinition" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void Load(string[] keys)
    parameters:
    - id: keys
      type: System.String[]
      description: Target keys
    content.vb: Public Sub Load(keys As String())
  overload: RocketshiftStudio.Trophy.Trophy.Load*
  nameWithType.vb: Trophy.Load(String())
  fullName.vb: RocketshiftStudio.Trophy.Trophy.Load(String())
  name.vb: Load(String())
- uid: RocketshiftStudio.Trophy.Trophy.LoadAsync(System.String[])
  commentId: M:RocketshiftStudio.Trophy.Trophy.LoadAsync(System.String[])
  id: LoadAsync(System.String[])
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: LoadAsync(string[])
  nameWithType: Trophy.LoadAsync(string[])
  fullName: RocketshiftStudio.Trophy.Trophy.LoadAsync(string[])
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: LoadAsync
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 570
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Load saved values from storage asynchronously according to storage flags defined in the <xref href="RocketshiftStudio.Trophy.ScoreDefinition" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Task LoadAsync(string[] keys)
    parameters:
    - id: keys
      type: System.String[]
      description: Target keys
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function LoadAsync(keys As String()) As Task
  overload: RocketshiftStudio.Trophy.Trophy.LoadAsync*
  nameWithType.vb: Trophy.LoadAsync(String())
  fullName.vb: RocketshiftStudio.Trophy.Trophy.LoadAsync(String())
  name.vb: LoadAsync(String())
- uid: RocketshiftStudio.Trophy.Trophy.GetUserScoreAsync(System.String,System.String[])
  commentId: M:RocketshiftStudio.Trophy.Trophy.GetUserScoreAsync(System.String,System.String[])
  id: GetUserScoreAsync(System.String,System.String[])
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: GetUserScoreAsync(string, params string[])
  nameWithType: Trophy.GetUserScoreAsync(string, params string[])
  fullName: RocketshiftStudio.Trophy.Trophy.GetUserScoreAsync(string, params string[])
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: GetUserScoreAsync
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 671
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Get saved values from cloud storage asynchronously using user id
  example: []
  syntax:
    content: public Task<ScoreData[]> GetUserScoreAsync(string userId, params string[] keys)
    parameters:
    - id: userId
      type: System.String
      description: Id of user
    - id: keys
      type: System.String[]
      description: Target keys
    return:
      type: System.Threading.Tasks.Task{RocketshiftStudio.Trophy.ScoreData[]}
      description: Task with collection of <xref href="RocketshiftStudio.Trophy.ScoreData" data-throw-if-not-resolved="false"></xref> from given user id and keys
    content.vb: Public Function GetUserScoreAsync(userId As String, ParamArray keys As String()) As Task(Of ScoreData())
  overload: RocketshiftStudio.Trophy.Trophy.GetUserScoreAsync*
  nameWithType.vb: Trophy.GetUserScoreAsync(String, ParamArray String())
  fullName.vb: RocketshiftStudio.Trophy.Trophy.GetUserScoreAsync(String, ParamArray String())
  name.vb: GetUserScoreAsync(String, ParamArray String())
- uid: RocketshiftStudio.Trophy.Trophy.Save(System.String[])
  commentId: M:RocketshiftStudio.Trophy.Trophy.Save(System.String[])
  id: Save(System.String[])
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: Save(params string[])
  nameWithType: Trophy.Save(params string[])
  fullName: RocketshiftStudio.Trophy.Trophy.Save(params string[])
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: Save
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 730
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Save current values in storage according to storage flags defined in the <xref href="RocketshiftStudio.Trophy.ScoreDefinition" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void Save(params string[] keys)
    parameters:
    - id: keys
      type: System.String[]
      description: Target keys
    content.vb: Public Sub Save(ParamArray keys As String())
  overload: RocketshiftStudio.Trophy.Trophy.Save*
  nameWithType.vb: Trophy.Save(ParamArray String())
  fullName.vb: RocketshiftStudio.Trophy.Trophy.Save(ParamArray String())
  name.vb: Save(ParamArray String())
- uid: RocketshiftStudio.Trophy.Trophy.SaveAsync(System.String[])
  commentId: M:RocketshiftStudio.Trophy.Trophy.SaveAsync(System.String[])
  id: SaveAsync(System.String[])
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: SaveAsync(params string[])
  nameWithType: Trophy.SaveAsync(params string[])
  fullName: RocketshiftStudio.Trophy.Trophy.SaveAsync(params string[])
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: SaveAsync
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 739
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Save current values in storage asynchronously according to storage flags defined in the <xref href="RocketshiftStudio.Trophy.ScoreDefinition" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Task SaveAsync(params string[] keys)
    parameters:
    - id: keys
      type: System.String[]
      description: Target keys
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SaveAsync(ParamArray keys As String()) As Task
  overload: RocketshiftStudio.Trophy.Trophy.SaveAsync*
  nameWithType.vb: Trophy.SaveAsync(ParamArray String())
  fullName.vb: RocketshiftStudio.Trophy.Trophy.SaveAsync(ParamArray String())
  name.vb: SaveAsync(ParamArray String())
- uid: RocketshiftStudio.Trophy.Trophy.ClearSavedScoreAsync(System.String[])
  commentId: M:RocketshiftStudio.Trophy.Trophy.ClearSavedScoreAsync(System.String[])
  id: ClearSavedScoreAsync(System.String[])
  parent: RocketshiftStudio.Trophy.Trophy
  langs:
  - csharp
  - vb
  name: ClearSavedScoreAsync(params string[])
  nameWithType: Trophy.ClearSavedScoreAsync(params string[])
  fullName: RocketshiftStudio.Trophy.Trophy.ClearSavedScoreAsync(params string[])
  type: Method
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: ClearSavedScoreAsync
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Trophy.cs
    startLine: 865
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy
  summary: Delete saved values from storage asynchronously according to storage flags defined in the <xref href="RocketshiftStudio.Trophy.ScoreDefinition" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Task ClearSavedScoreAsync(params string[] keys)
    parameters:
    - id: keys
      type: System.String[]
      description: Target keys
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ClearSavedScoreAsync(ParamArray keys As String()) As Task
  overload: RocketshiftStudio.Trophy.Trophy.ClearSavedScoreAsync*
  nameWithType.vb: Trophy.ClearSavedScoreAsync(ParamArray String())
  fullName.vb: RocketshiftStudio.Trophy.Trophy.ClearSavedScoreAsync(ParamArray String())
  name.vb: ClearSavedScoreAsync(ParamArray String())
references:
- uid: RocketshiftStudio.Trophy
  commentId: N:RocketshiftStudio.Trophy
  href: RocketshiftStudio.html
  name: RocketshiftStudio.Trophy
  nameWithType: RocketshiftStudio.Trophy
  fullName: RocketshiftStudio.Trophy
  spec.csharp:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.html
  spec.vb:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: RocketshiftStudio.Shared.SingletonMonoBehaviour{RocketshiftStudio.Trophy.Trophy}
  commentId: T:RocketshiftStudio.Shared.SingletonMonoBehaviour{RocketshiftStudio.Trophy.Trophy}
  parent: RocketshiftStudio.Shared
  definition: RocketshiftStudio.Shared.SingletonMonoBehaviour`1
  href: RocketshiftStudio.Shared.SingletonMonoBehaviour-1.html
  name: SingletonMonoBehaviour<Trophy>
  nameWithType: SingletonMonoBehaviour<Trophy>
  fullName: RocketshiftStudio.Shared.SingletonMonoBehaviour<RocketshiftStudio.Trophy.Trophy>
  nameWithType.vb: SingletonMonoBehaviour(Of Trophy)
  fullName.vb: RocketshiftStudio.Shared.SingletonMonoBehaviour(Of RocketshiftStudio.Trophy.Trophy)
  name.vb: SingletonMonoBehaviour(Of Trophy)
  spec.csharp:
  - uid: RocketshiftStudio.Shared.SingletonMonoBehaviour`1
    name: SingletonMonoBehaviour
    href: RocketshiftStudio.Shared.SingletonMonoBehaviour-1.html
  - name: <
  - uid: RocketshiftStudio.Trophy.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.Trophy.html
  - name: '>'
  spec.vb:
  - uid: RocketshiftStudio.Shared.SingletonMonoBehaviour`1
    name: SingletonMonoBehaviour
    href: RocketshiftStudio.Shared.SingletonMonoBehaviour-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: RocketshiftStudio.Trophy.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.Trophy.html
  - name: )
- uid: RocketshiftStudio.Shared.SingletonMonoBehaviour{RocketshiftStudio.Trophy.Trophy}.Instance
  commentId: P:RocketshiftStudio.Shared.SingletonMonoBehaviour{RocketshiftStudio.Trophy.Trophy}.Instance
  parent: RocketshiftStudio.Shared.SingletonMonoBehaviour{RocketshiftStudio.Trophy.Trophy}
  definition: RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Instance
  href: RocketshiftStudio.Shared.SingletonMonoBehaviour-1.html#RocketshiftStudio_Shared_SingletonMonoBehaviour_1_Instance
  name: Instance
  nameWithType: SingletonMonoBehaviour<Trophy>.Instance
  fullName: RocketshiftStudio.Shared.SingletonMonoBehaviour<RocketshiftStudio.Trophy.Trophy>.Instance
  nameWithType.vb: SingletonMonoBehaviour(Of Trophy).Instance
  fullName.vb: RocketshiftStudio.Shared.SingletonMonoBehaviour(Of RocketshiftStudio.Trophy.Trophy).Instance
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: RocketshiftStudio.Shared.SingletonMonoBehaviour`1
  commentId: T:RocketshiftStudio.Shared.SingletonMonoBehaviour`1
  href: RocketshiftStudio.Shared.SingletonMonoBehaviour-1.html
  name: SingletonMonoBehaviour<T>
  nameWithType: SingletonMonoBehaviour<T>
  fullName: RocketshiftStudio.Shared.SingletonMonoBehaviour<T>
  nameWithType.vb: SingletonMonoBehaviour(Of T)
  fullName.vb: RocketshiftStudio.Shared.SingletonMonoBehaviour(Of T)
  name.vb: SingletonMonoBehaviour(Of T)
  spec.csharp:
  - uid: RocketshiftStudio.Shared.SingletonMonoBehaviour`1
    name: SingletonMonoBehaviour
    href: RocketshiftStudio.Shared.SingletonMonoBehaviour-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: RocketshiftStudio.Shared.SingletonMonoBehaviour`1
    name: SingletonMonoBehaviour
    href: RocketshiftStudio.Shared.SingletonMonoBehaviour-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: RocketshiftStudio.Shared
  commentId: N:RocketshiftStudio.Shared
  href: RocketshiftStudio.html
  name: RocketshiftStudio.Shared
  nameWithType: RocketshiftStudio.Shared
  fullName: RocketshiftStudio.Shared
  spec.csharp:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Shared
    name: Shared
    href: RocketshiftStudio.Shared.html
  spec.vb:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Shared
    name: Shared
    href: RocketshiftStudio.Shared.html
- uid: RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Instance
  commentId: P:RocketshiftStudio.Shared.SingletonMonoBehaviour`1.Instance
  href: RocketshiftStudio.Shared.SingletonMonoBehaviour-1.html#RocketshiftStudio_Shared_SingletonMonoBehaviour_1_Instance
  name: Instance
  nameWithType: SingletonMonoBehaviour<T>.Instance
  fullName: RocketshiftStudio.Shared.SingletonMonoBehaviour<T>.Instance
  nameWithType.vb: SingletonMonoBehaviour(Of T).Instance
  fullName.vb: RocketshiftStudio.Shared.SingletonMonoBehaviour(Of T).Instance
- uid: RocketshiftStudio.Trophy.Trophy.IsInitialized*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.IsInitialized
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_IsInitialized
  name: IsInitialized
  nameWithType: Trophy.IsInitialized
  fullName: RocketshiftStudio.Trophy.Trophy.IsInitialized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RocketshiftStudio.Trophy.Trophy.Scores*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.Scores
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_Scores
  name: Scores
  nameWithType: Trophy.Scores
  fullName: RocketshiftStudio.Trophy.Trophy.Scores
- uid: System.Collections.Generic.IList{RocketshiftStudio.Trophy.Score}
  commentId: T:System.Collections.Generic.IList{RocketshiftStudio.Trophy.Score}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: RocketshiftStudio.Trophy.Score.html
  name: IList<Score>
  nameWithType: IList<Score>
  fullName: System.Collections.Generic.IList<RocketshiftStudio.Trophy.Score>
  nameWithType.vb: IList(Of Score)
  fullName.vb: System.Collections.Generic.IList(Of RocketshiftStudio.Trophy.Score)
  name.vb: IList(Of Score)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - uid: RocketshiftStudio.Trophy.Score
    name: Score
    href: RocketshiftStudio.Trophy.Score.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: RocketshiftStudio.Trophy.Score
    name: Score
    href: RocketshiftStudio.Trophy.Score.html
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: RocketshiftStudio.Trophy.Trophy.ValueChangedCallback
  commentId: T:RocketshiftStudio.Trophy.Trophy.ValueChangedCallback
  parent: RocketshiftStudio.Trophy
  href: RocketshiftStudio.Trophy.Trophy.html
  name: Trophy.ValueChangedCallback
  nameWithType: Trophy.ValueChangedCallback
  fullName: RocketshiftStudio.Trophy.Trophy.ValueChangedCallback
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.Trophy.html
  - name: .
  - uid: RocketshiftStudio.Trophy.Trophy.ValueChangedCallback
    name: ValueChangedCallback
    href: RocketshiftStudio.Trophy.Trophy.ValueChangedCallback.html
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.Trophy.html
  - name: .
  - uid: RocketshiftStudio.Trophy.Trophy.ValueChangedCallback
    name: ValueChangedCallback
    href: RocketshiftStudio.Trophy.Trophy.ValueChangedCallback.html
- uid: RocketshiftStudio.Trophy.Trophy.StatusChangedCallback
  commentId: T:RocketshiftStudio.Trophy.Trophy.StatusChangedCallback
  parent: RocketshiftStudio.Trophy
  href: RocketshiftStudio.Trophy.Trophy.html
  name: Trophy.StatusChangedCallback
  nameWithType: Trophy.StatusChangedCallback
  fullName: RocketshiftStudio.Trophy.Trophy.StatusChangedCallback
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.Trophy.html
  - name: .
  - uid: RocketshiftStudio.Trophy.Trophy.StatusChangedCallback
    name: StatusChangedCallback
    href: RocketshiftStudio.Trophy.Trophy.StatusChangedCallback.html
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.Trophy.html
  - name: .
  - uid: RocketshiftStudio.Trophy.Trophy.StatusChangedCallback
    name: StatusChangedCallback
    href: RocketshiftStudio.Trophy.Trophy.StatusChangedCallback.html
- uid: RocketshiftStudio.Trophy.Trophy.CountingChangedCallback
  commentId: T:RocketshiftStudio.Trophy.Trophy.CountingChangedCallback
  parent: RocketshiftStudio.Trophy
  href: RocketshiftStudio.Trophy.Trophy.html
  name: Trophy.CountingChangedCallback
  nameWithType: Trophy.CountingChangedCallback
  fullName: RocketshiftStudio.Trophy.Trophy.CountingChangedCallback
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.Trophy.html
  - name: .
  - uid: RocketshiftStudio.Trophy.Trophy.CountingChangedCallback
    name: CountingChangedCallback
    href: RocketshiftStudio.Trophy.Trophy.CountingChangedCallback.html
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.Trophy.html
  - name: .
  - uid: RocketshiftStudio.Trophy.Trophy.CountingChangedCallback
    name: CountingChangedCallback
    href: RocketshiftStudio.Trophy.Trophy.CountingChangedCallback.html
- uid: RocketshiftStudio.Trophy.Trophy.InitializeAsync*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.InitializeAsync
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_InitializeAsync
  name: InitializeAsync
  nameWithType: Trophy.InitializeAsync
  fullName: RocketshiftStudio.Trophy.Trophy.InitializeAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
- uid: RocketshiftStudio.Trophy.TrophySettings
  commentId: T:RocketshiftStudio.Trophy.TrophySettings
  parent: RocketshiftStudio.Trophy
  href: RocketshiftStudio.Trophy.TrophySettings.html
  name: TrophySettings
  nameWithType: TrophySettings
  fullName: RocketshiftStudio.Trophy.TrophySettings
- uid: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
  commentId: T:RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
  name: Exceptions.DefinitionNullException<TDefinition>
  nameWithType: Exceptions.DefinitionNullException<TDefinition>
  fullName: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException<TDefinition>
  nameWithType.vb: Exceptions.DefinitionNullException(Of TDefinition)
  fullName.vb: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException(Of TDefinition)
  name.vb: Exceptions.DefinitionNullException(Of TDefinition)
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Exceptions
    name: Exceptions
  - name: .
  - uid: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    name: DefinitionNullException
  - name: <
  - name: TDefinition
  - name: '>'
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Exceptions
    name: Exceptions
  - name: .
  - uid: RocketshiftStudio.Trophy.Exceptions.DefinitionNullException`1
    name: DefinitionNullException
  - name: (
  - name: Of
  - name: " "
  - name: TDefinition
  - name: )
- uid: RocketshiftStudio.Trophy.Trophy.BeginCounting*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.BeginCounting
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_BeginCounting_System_String___
  name: BeginCounting
  nameWithType: Trophy.BeginCounting
  fullName: RocketshiftStudio.Trophy.Trophy.BeginCounting
- uid: System.String[]
  isExternal: true
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
- uid: RocketshiftStudio.Trophy.Trophy.IsCounting*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.IsCounting
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_IsCounting_System_String_
  name: IsCounting
  nameWithType: Trophy.IsCounting
  fullName: RocketshiftStudio.Trophy.Trophy.IsCounting
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RocketshiftStudio.Trophy.Trophy.EndCounting*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.EndCounting
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_EndCounting_System_String___
  name: EndCounting
  nameWithType: Trophy.EndCounting
  fullName: RocketshiftStudio.Trophy.Trophy.EndCounting
- uid: RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
  commentId: T:RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
  name: Exceptions.InvalidAmountException
  nameWithType: Exceptions.InvalidAmountException
  fullName: RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Exceptions
    name: Exceptions
  - name: .
  - uid: RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
    name: InvalidAmountException
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Exceptions
    name: Exceptions
  - name: .
  - uid: RocketshiftStudio.Trophy.Exceptions.InvalidAmountException
    name: InvalidAmountException
- uid: RocketshiftStudio.Trophy.Trophy.IncreaseValue*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.IncreaseValue
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_IncreaseValue_System_String_System_Double_System_Boolean_
  name: IncreaseValue
  nameWithType: Trophy.IncreaseValue
  fullName: RocketshiftStudio.Trophy.Trophy.IncreaseValue
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: RocketshiftStudio.Trophy.Trophy.DecreaseValue*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.DecreaseValue
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_DecreaseValue_System_String_System_Double_System_Boolean_
  name: DecreaseValue
  nameWithType: Trophy.DecreaseValue
  fullName: RocketshiftStudio.Trophy.Trophy.DecreaseValue
- uid: RocketshiftStudio.Trophy.Trophy.MultiplyValue*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.MultiplyValue
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_MultiplyValue_System_String_System_Double_System_Boolean_
  name: MultiplyValue
  nameWithType: Trophy.MultiplyValue
  fullName: RocketshiftStudio.Trophy.Trophy.MultiplyValue
- uid: RocketshiftStudio.Trophy.Trophy.SetValue*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.SetValue
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_SetValue_System_String_System_Double_System_Boolean_
  name: SetValue
  nameWithType: Trophy.SetValue
  fullName: RocketshiftStudio.Trophy.Trophy.SetValue
- uid: RocketshiftStudio.Trophy.Trophy.ResetValue*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.ResetValue
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_ResetValue_System_String_
  name: ResetValue
  nameWithType: Trophy.ResetValue
  fullName: RocketshiftStudio.Trophy.Trophy.ResetValue
- uid: RocketshiftStudio.Trophy.Trophy.GetValue*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.GetValue
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_GetValue_System_String_RocketshiftStudio_Trophy_ScoreType_
  name: GetValue
  nameWithType: Trophy.GetValue
  fullName: RocketshiftStudio.Trophy.Trophy.GetValue
- uid: RocketshiftStudio.Trophy.ScoreType
  commentId: T:RocketshiftStudio.Trophy.ScoreType
  parent: RocketshiftStudio.Trophy
  href: RocketshiftStudio.Trophy.ScoreType.html
  name: ScoreType
  nameWithType: ScoreType
  fullName: RocketshiftStudio.Trophy.ScoreType
- uid: RocketshiftStudio.Trophy.Trophy.TryGetValue*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.TryGetValue
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_TryGetValue_System_String_System_Double__RocketshiftStudio_Trophy_ScoreType_
  name: TryGetValue
  nameWithType: Trophy.TryGetValue
  fullName: RocketshiftStudio.Trophy.Trophy.TryGetValue
- uid: RocketshiftStudio.Trophy.Trophy.SetMultiplier*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.SetMultiplier
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_SetMultiplier_System_String_System_Single_
  name: SetMultiplier
  nameWithType: Trophy.SetMultiplier
  fullName: RocketshiftStudio.Trophy.Trophy.SetMultiplier
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: RocketshiftStudio.Trophy.Trophy.GetMultiplier*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.GetMultiplier
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_GetMultiplier_System_String_
  name: GetMultiplier
  nameWithType: Trophy.GetMultiplier
  fullName: RocketshiftStudio.Trophy.Trophy.GetMultiplier
- uid: RocketshiftStudio.Trophy.Trophy.GetStatus*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.GetStatus
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_GetStatus_System_String_
  name: GetStatus
  nameWithType: Trophy.GetStatus
  fullName: RocketshiftStudio.Trophy.Trophy.GetStatus
- uid: RocketshiftStudio.Trophy.ScoreStatusFlags
  commentId: T:RocketshiftStudio.Trophy.ScoreStatusFlags
  parent: RocketshiftStudio.Trophy
  href: RocketshiftStudio.Trophy.ScoreStatusFlags.html
  name: ScoreStatusFlags
  nameWithType: ScoreStatusFlags
  fullName: RocketshiftStudio.Trophy.ScoreStatusFlags
- uid: RocketshiftStudio.Trophy.LeaderboardRequest
  commentId: T:RocketshiftStudio.Trophy.LeaderboardRequest
  href: RocketshiftStudio.Trophy.LeaderboardRequest.html
  name: LeaderboardRequest
  nameWithType: LeaderboardRequest
  fullName: RocketshiftStudio.Trophy.LeaderboardRequest
- uid: RocketshiftStudio.Trophy.Trophy.PostToLeaderboard*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.PostToLeaderboard
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_PostToLeaderboard_RocketshiftStudio_Trophy_LeaderboardRequest___
  name: PostToLeaderboard
  nameWithType: Trophy.PostToLeaderboard
  fullName: RocketshiftStudio.Trophy.Trophy.PostToLeaderboard
- uid: RocketshiftStudio.Trophy.LeaderboardRequest[]
  isExternal: true
  href: RocketshiftStudio.Trophy.LeaderboardRequest.html
  name: LeaderboardRequest[]
  nameWithType: LeaderboardRequest[]
  fullName: RocketshiftStudio.Trophy.LeaderboardRequest[]
  nameWithType.vb: LeaderboardRequest()
  fullName.vb: RocketshiftStudio.Trophy.LeaderboardRequest()
  name.vb: LeaderboardRequest()
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.LeaderboardRequest
    name: LeaderboardRequest
    href: RocketshiftStudio.Trophy.LeaderboardRequest.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: RocketshiftStudio.Trophy.LeaderboardRequest
    name: LeaderboardRequest
    href: RocketshiftStudio.Trophy.LeaderboardRequest.html
  - name: (
  - name: )
- uid: RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_PostToLeaderboardAsync_RocketshiftStudio_Trophy_LeaderboardRequest___
  name: PostToLeaderboardAsync
  nameWithType: Trophy.PostToLeaderboardAsync
  fullName: RocketshiftStudio.Trophy.Trophy.PostToLeaderboardAsync
- uid: RocketshiftStudio.Trophy.ScoreDefinition
  commentId: T:RocketshiftStudio.Trophy.ScoreDefinition
  parent: RocketshiftStudio.Trophy
  href: RocketshiftStudio.Trophy.ScoreDefinition.html
  name: ScoreDefinition
  nameWithType: ScoreDefinition
  fullName: RocketshiftStudio.Trophy.ScoreDefinition
- uid: RocketshiftStudio.Trophy.Trophy.Load*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.Load
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_Load_System_String___
  name: Load
  nameWithType: Trophy.Load
  fullName: RocketshiftStudio.Trophy.Trophy.Load
- uid: RocketshiftStudio.Trophy.Trophy.LoadAsync*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.LoadAsync
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_LoadAsync_System_String___
  name: LoadAsync
  nameWithType: Trophy.LoadAsync
  fullName: RocketshiftStudio.Trophy.Trophy.LoadAsync
- uid: RocketshiftStudio.Trophy.ScoreData
  commentId: T:RocketshiftStudio.Trophy.ScoreData
  href: RocketshiftStudio.Trophy.ScoreData.html
  name: ScoreData
  nameWithType: ScoreData
  fullName: RocketshiftStudio.Trophy.ScoreData
- uid: RocketshiftStudio.Trophy.Trophy.GetUserScoreAsync*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.GetUserScoreAsync
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_GetUserScoreAsync_System_String_System_String___
  name: GetUserScoreAsync
  nameWithType: Trophy.GetUserScoreAsync
  fullName: RocketshiftStudio.Trophy.Trophy.GetUserScoreAsync
- uid: System.Threading.Tasks.Task{RocketshiftStudio.Trophy.ScoreData[]}
  commentId: T:System.Threading.Tasks.Task{RocketshiftStudio.Trophy.ScoreData[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: RocketshiftStudio.Trophy.ScoreData.html
  name: Task<ScoreData[]>
  nameWithType: Task<ScoreData[]>
  fullName: System.Threading.Tasks.Task<RocketshiftStudio.Trophy.ScoreData[]>
  nameWithType.vb: Task(Of ScoreData())
  fullName.vb: System.Threading.Tasks.Task(Of RocketshiftStudio.Trophy.ScoreData())
  name.vb: Task(Of ScoreData())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: RocketshiftStudio.Trophy.ScoreData
    name: ScoreData
    href: RocketshiftStudio.Trophy.ScoreData.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: RocketshiftStudio.Trophy.ScoreData
    name: ScoreData
    href: RocketshiftStudio.Trophy.ScoreData.html
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: RocketshiftStudio.Trophy.Trophy.Save*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.Save
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_Save_System_String___
  name: Save
  nameWithType: Trophy.Save
  fullName: RocketshiftStudio.Trophy.Trophy.Save
- uid: RocketshiftStudio.Trophy.Trophy.SaveAsync*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.SaveAsync
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_SaveAsync_System_String___
  name: SaveAsync
  nameWithType: Trophy.SaveAsync
  fullName: RocketshiftStudio.Trophy.Trophy.SaveAsync
- uid: RocketshiftStudio.Trophy.Trophy.ClearSavedScoreAsync*
  commentId: Overload:RocketshiftStudio.Trophy.Trophy.ClearSavedScoreAsync
  href: RocketshiftStudio.Trophy.Trophy.html#RocketshiftStudio_Trophy_Trophy_ClearSavedScoreAsync_System_String___
  name: ClearSavedScoreAsync
  nameWithType: Trophy.ClearSavedScoreAsync
  fullName: RocketshiftStudio.Trophy.Trophy.ClearSavedScoreAsync
