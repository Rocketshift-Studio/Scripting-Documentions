### YamlMime:ManagedReference
items:
- uid: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension
  commentId: T:RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension
  id: ILocalStorageExtension
  parent: RocketshiftStudio.Trophy.Extensions
  children:
  - RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.FileExtension
  - RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.SaveDirectory
  langs:
  - csharp
  - vb
  name: ILocalStorageExtension
  nameWithType: ILocalStorageExtension
  fullName: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension
  type: Interface
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Storage/ILocalStorageExtension.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: ILocalStorageExtension
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Storage/ILocalStorageExtension.cs
    startLine: 5
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy.Extensions
  summary: To allow local storage based save/load operations on score values
  example: []
  syntax:
    content: 'public interface ILocalStorageExtension : IStorageExtension, IExtension'
    content.vb: Public Interface ILocalStorageExtension Inherits IStorageExtension, IExtension
  inheritedMembers:
  - RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadMultipleAsync(System.String[])
  - RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveMultipleAsync(RocketshiftStudio.Trophy.ScoreData[])
  - RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteMultipleAsync(System.String[])
- uid: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.FileExtension
  commentId: P:RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.FileExtension
  id: FileExtension
  parent: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension
  langs:
  - csharp
  - vb
  name: FileExtension
  nameWithType: ILocalStorageExtension.FileExtension
  fullName: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.FileExtension
  type: Property
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Storage/ILocalStorageExtension.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: FileExtension
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Storage/ILocalStorageExtension.cs
    startLine: 7
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy.Extensions
  syntax:
    content: string FileExtension { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property FileExtension As String
  overload: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.FileExtension*
- uid: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.SaveDirectory
  commentId: P:RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.SaveDirectory
  id: SaveDirectory
  parent: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension
  langs:
  - csharp
  - vb
  name: SaveDirectory
  nameWithType: ILocalStorageExtension.SaveDirectory
  fullName: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.SaveDirectory
  type: Property
  source:
    remote:
      path: Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Storage/ILocalStorageExtension.cs
      branch: main
      repo: https://github.com/Rocketshift-Studio/Trophy.git
    id: SaveDirectory
    path: ../../../../../../Unity Projects/Trophy/Assets/Rocketshift Studio/Systems/Trophy/Scripts/Extensions/Storage/ILocalStorageExtension.cs
    startLine: 9
  assemblies:
  - RocketshiftStudio.Trophy
  namespace: RocketshiftStudio.Trophy.Extensions
  syntax:
    content: string SaveDirectory { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property SaveDirectory As String
  overload: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.SaveDirectory*
references:
- uid: RocketshiftStudio.Trophy.Extensions
  commentId: N:RocketshiftStudio.Trophy.Extensions
  href: RocketshiftStudio.html
  name: RocketshiftStudio.Trophy.Extensions
  nameWithType: RocketshiftStudio.Trophy.Extensions
  fullName: RocketshiftStudio.Trophy.Extensions
  spec.csharp:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.html
  - name: .
  - uid: RocketshiftStudio.Trophy.Extensions
    name: Extensions
    href: RocketshiftStudio.Trophy.Extensions.html
  spec.vb:
  - uid: RocketshiftStudio
    name: RocketshiftStudio
    href: RocketshiftStudio.html
  - name: .
  - uid: RocketshiftStudio.Trophy
    name: Trophy
    href: RocketshiftStudio.Trophy.html
  - name: .
  - uid: RocketshiftStudio.Trophy.Extensions
    name: Extensions
    href: RocketshiftStudio.Trophy.Extensions.html
- uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadMultipleAsync(System.String[])
  commentId: M:RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadMultipleAsync(System.String[])
  parent: RocketshiftStudio.Trophy.Extensions.IStorageExtension
  isExternal: true
  href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_LoadMultipleAsync_System_String___
  name: LoadMultipleAsync(string[])
  nameWithType: IStorageExtension.LoadMultipleAsync(string[])
  fullName: RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadMultipleAsync(string[])
  nameWithType.vb: IStorageExtension.LoadMultipleAsync(String())
  fullName.vb: RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadMultipleAsync(String())
  name.vb: LoadMultipleAsync(String())
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadMultipleAsync(System.String[])
    name: LoadMultipleAsync
    href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_LoadMultipleAsync_System_String___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.LoadMultipleAsync(System.String[])
    name: LoadMultipleAsync
    href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_LoadMultipleAsync_System_String___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveMultipleAsync(RocketshiftStudio.Trophy.ScoreData[])
  commentId: M:RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveMultipleAsync(RocketshiftStudio.Trophy.ScoreData[])
  parent: RocketshiftStudio.Trophy.Extensions.IStorageExtension
  href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_SaveMultipleAsync_RocketshiftStudio_Trophy_ScoreData___
  name: SaveMultipleAsync(ScoreData[])
  nameWithType: IStorageExtension.SaveMultipleAsync(ScoreData[])
  fullName: RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveMultipleAsync(RocketshiftStudio.Trophy.ScoreData[])
  nameWithType.vb: IStorageExtension.SaveMultipleAsync(ScoreData())
  fullName.vb: RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveMultipleAsync(RocketshiftStudio.Trophy.ScoreData())
  name.vb: SaveMultipleAsync(ScoreData())
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveMultipleAsync(RocketshiftStudio.Trophy.ScoreData[])
    name: SaveMultipleAsync
    href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_SaveMultipleAsync_RocketshiftStudio_Trophy_ScoreData___
  - name: (
  - uid: RocketshiftStudio.Trophy.ScoreData
    name: ScoreData
    href: RocketshiftStudio.Trophy.ScoreData.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.SaveMultipleAsync(RocketshiftStudio.Trophy.ScoreData[])
    name: SaveMultipleAsync
    href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_SaveMultipleAsync_RocketshiftStudio_Trophy_ScoreData___
  - name: (
  - uid: RocketshiftStudio.Trophy.ScoreData
    name: ScoreData
    href: RocketshiftStudio.Trophy.ScoreData.html
  - name: (
  - name: )
  - name: )
- uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteMultipleAsync(System.String[])
  commentId: M:RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteMultipleAsync(System.String[])
  parent: RocketshiftStudio.Trophy.Extensions.IStorageExtension
  isExternal: true
  href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_DeleteMultipleAsync_System_String___
  name: DeleteMultipleAsync(string[])
  nameWithType: IStorageExtension.DeleteMultipleAsync(string[])
  fullName: RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteMultipleAsync(string[])
  nameWithType.vb: IStorageExtension.DeleteMultipleAsync(String())
  fullName.vb: RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteMultipleAsync(String())
  name.vb: DeleteMultipleAsync(String())
  spec.csharp:
  - uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteMultipleAsync(System.String[])
    name: DeleteMultipleAsync
    href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_DeleteMultipleAsync_System_String___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension.DeleteMultipleAsync(System.String[])
    name: DeleteMultipleAsync
    href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html#RocketshiftStudio_Trophy_Extensions_IStorageExtension_DeleteMultipleAsync_System_String___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: RocketshiftStudio.Trophy.Extensions.IStorageExtension
  commentId: T:RocketshiftStudio.Trophy.Extensions.IStorageExtension
  parent: RocketshiftStudio.Trophy.Extensions
  href: RocketshiftStudio.Trophy.Extensions.IStorageExtension.html
  name: IStorageExtension
  nameWithType: IStorageExtension
  fullName: RocketshiftStudio.Trophy.Extensions.IStorageExtension
- uid: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.FileExtension*
  commentId: Overload:RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.FileExtension
  href: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.html#RocketshiftStudio_Trophy_Extensions_ILocalStorageExtension_FileExtension
  name: FileExtension
  nameWithType: ILocalStorageExtension.FileExtension
  fullName: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.FileExtension
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.SaveDirectory*
  commentId: Overload:RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.SaveDirectory
  href: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.html#RocketshiftStudio_Trophy_Extensions_ILocalStorageExtension_SaveDirectory
  name: SaveDirectory
  nameWithType: ILocalStorageExtension.SaveDirectory
  fullName: RocketshiftStudio.Trophy.Extensions.ILocalStorageExtension.SaveDirectory
